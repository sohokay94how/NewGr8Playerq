<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.Win.C1TouchToolKit.4</name>
    </assembly>
    <members>
        <member name="T:GrapeCity.Licenses.PowerToolsLicense">
            <summary>
              Represents a license of a PowerTools component.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicense._usageMode">
            <summary>
              Indicates when the license is used.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicense._licenseKey">
            <summary>
              Indicates the product key of the license.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicense._exist">
            <summary>
              Indicates whether the registry entry is exist or not.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicense._valid">
            <summary>
              Indicates whether the license is valid or not.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicense._fullFunction">
            <summary>
              Indicates whether the license is a full function license or not.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicense._expired">
            <summary>
              Indicates whether the license is expired or not.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicense._daysLeft">
            <summary>
              Indicates the remaining available days of a trial version.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicense._compiledDate">
            <summary>
              Indicates the compiled date of the user assembly.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicense._computerName">
            <summary>
              Indicates the name of the computer which build the user assembly. 
            </summary>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicense.#ctor(System.ComponentModel.LicenseUsageMode)">
            <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> class. 
            </summary>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicense.#ctor(System.ComponentModel.LicenseUsageMode,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> class. 
            </summary>
            <param name="usageMode">
              A <see cref="T:System.ComponentModel.LicenseUsageMode"/> value indicates when the license is used.
            </param>
            <param name="licenseKey">
              A <c>string</c> value indicates the product key of the license.
            </param>
            <param name="exist">
              A <c>bool</c> value indicates whether the registry entry is exist or not.
            </param>
            <param name="valid">
              A <c>bool</c> value indicates whether the license is valid or not.
            </param>
            <param name="fullFunction">
              A <c>bool</c> value indicates whether the license is a full function license or not.
            </param>
            <param name="expired">
              A <c>bool</c> value indicates whether the license is expired or not.
            </param>
            <param name="daysLeft">
              An <c>int</c> value indicates the remaining available days of a trial version.
            </param>
            <param name="compiledDate">
              A <see cref="T:System.DateTime"/> value indicates the compiled date of the user assembly.
            </param>
            <param name="computerName">
              A <c>string</c> value indicates the name of the computer which build the user assembly. 
            </param>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicense.Dispose">
            <summary>
              Releases all resources used by this <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>. It is unused.
            </summary>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicense.CompareTo(GrapeCity.Licenses.PowerToolsLicense)">
            <summary>
              Compare to another license.
            </summary>
            <param name="other">
              The license to compare.
            </param>
            <returns>
              1 means this license can be used longer than the other one.
              0 means these two licenses have same left days.
              -1 means this license can be used shorter than the other one.
            </returns>
        </member>
        <member name="P:GrapeCity.Licenses.PowerToolsLicense.UsageMode">
            <summary>
              Gets a <see cref="T:System.ComponentModel.LicenseUsageMode"/> value that indicates when the license is used.
            </summary>
            <value>
              A <see cref="T:System.ComponentModel.LicenseUsageMode"/> value indicates the license is used in Design-Time or Run-Time.
            </value>
        </member>
        <member name="P:GrapeCity.Licenses.PowerToolsLicense.LicenseKey">
            <summary>
              Gets a <c>string</c> value that indicates the product key of the license.
            </summary>
            <value>
              A <c>string</c> indicates the product key.
            </value>
        </member>
        <member name="P:GrapeCity.Licenses.PowerToolsLicense.Exist">
            <summary>
              Gets a <c>bool</c> value that indicates whether the registry entry is exist or not.
            </summary>
            <value>
              <c>true</c> if the corresponding registry entry is exist; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:GrapeCity.Licenses.PowerToolsLicense.Valid">
            <summary>
              Gets a <c>bool</c> value that indicates whether the license is valid or not.
            </summary>
            <value>
              <c>true</c> if the license is valid; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:GrapeCity.Licenses.PowerToolsLicense.FullFunction">
            <summary>
              Gets a <c>bool</c> value that indicates whether the license is a full function license or not.
            </summary>
            <value>
              <c>true</c> if the license is a product license; <c>false</c> if the license is a trial license.
            </value>
        </member>
        <member name="P:GrapeCity.Licenses.PowerToolsLicense.Expired">
            <summary>
              Gets a <c>bool</c> value that indicates whether the trial license is expired or not.
            </summary>
            <value>
              <c>true</c> if the license is expired; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:GrapeCity.Licenses.PowerToolsLicense.DaysLeft">
            <summary>
              Gets an <c>int</c> value that indicates the remaining available days of a trial version.
            </summary>
            <value>
              An <c>int</c> value indicates the remaining available days if this is a trial license.
            </value>
        </member>
        <member name="P:GrapeCity.Licenses.PowerToolsLicense.CompiledDate">
            <summary>
              Gets a <see cref="T:System.DateTime"/> value that indicates the compiled date of the user assembly.
            </summary>
            <value>
              The date when the user build an assembly which use a PowerTools component.
            </value>
        </member>
        <member name="P:GrapeCity.Licenses.PowerToolsLicense.ComputerName">
            <summary>
              Gets a <c>bool</c> value that indicates the name of the computer which build the user assembly. 
            </summary>
            <value>
              The name of the computer which the user use to make a build.
            </value>
        </member>
        <member name="P:GrapeCity.Licenses.PowerToolsLicense.IsEmpty">
            <summary>
              Gets a <c>bool</c> value that indicates whether the license is empty or not. 
            </summary>
        </member>
        <member name="T:GrapeCity.Licenses.PowerToolsLicenseProvider">
            <summary>
              Represents a license provider of a PowerTools component.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicenseProvider.MAXDAYSDESIGNTIME">
            <summary>
              The max days to use at design time.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicenseProvider.MAXDAYSRUNTIME">
            <summary>
              The max days to use at run time.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicenseProvider.MAXINTERVAL">
            <summary>
              The max interval days for design time usage.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicenseProvider.PackageCodeCharacterCount">
            <summary>
            Current package code is ushort and can be convert to 4-characters string (hex)
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicenseProvider._showDialogDummy">
            <summary>
              Indicates a instance of <see cref="T:GrapeCity.Licenses.PowerToolsLicenseProvider.ShowDialogDummy"/>, used to indicate if it is the first time to show dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicenseProvider._licenseDataCacheForAppDomain">
            <summary>
              Cache the license data for AppDomain license file. Use Hashtable because it is Thread Safe.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicenseProvider._licenseDataCacheForAssemblies">
            <summary>
              Cache the license data for the assemblies in current AppDomain. Use Hashtable because it is Thread Safe.
            </summary>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
              Returns a license for the instance of the component, if one is available.
            </summary>
            <param name="context">
              A <see cref="T:System.ComponentModel.LicenseContext"/> that specifies where you can use the licensed object.
            </param>
            <param name="type">
              A <see cref="T:System.Type"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <param name="instance">
              A component that requests the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <param name="allowExceptions">
              <c>true</c> if a <see cref="T:System.ComponentModel.LicenseException"/> should be thrown when a component cannot be granted a license; otherwise, <c>false</c>.
            </param>
            <returns>
              A valid <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>. If this method cannot find a valid <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>, it returns <c>null</c>.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.AllowShowDialog(GrapeCity.Licenses.PowerToolsLicense)">
            <summary>
              Determines whether allows to show the dialog or not.
            </summary>
            <param name="license">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> indicates the final license for the specified component.
            </param>
            <returns>
              <c>true</c> if the dialog can be shown; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.ShouldShowDialog(GrapeCity.Licenses.PowerToolsLicense)">
            <summary>
              Determines whether should show the dialog or not for the specified license.
            </summary>
            <param name="license">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> indicates the final license for the specified component.
            </param>
            <returns>
              <c>true</c> to show dialog; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.CreateShowDialogDummy(System.Type,GrapeCity.Licenses.ProductInfo,GrapeCity.Licenses.PowerToolsLicense,System.Reflection.Assembly,System.Object)">
            <summary>
            Create a flag to indicate the license dialog is shown
            </summary>
            <param name="componentType">
              A <see cref="T:System.Type"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the valid product package for the specified component.
            </param>
            <param name="license">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> indicates the final license for the specified component.
            </param>
            <param name="licenseLocation">
              A <see cref="T:System.Reflection.Assembly"/> indicates the location of the <paramref name="license"/>. For Run-Time, it is the assembly where the license resource embeded; for Design-Time, it should be null.
            </param>
            <param name="instance">
              A component that requests the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <returns>Return the flag to indicate the license dialog is shown</returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.IsShowDialogDummyCreated">
            <summary>
            Indicates whether the license dialog has been shown before
            </summary>
            <returns>Return true if the license dialog is shown; Else return false</returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.ShowDesignTimeLicenseDialog(System.Type,GrapeCity.Licenses.ProductInfo,GrapeCity.Licenses.PowerToolsLicense,System.Object)">
            <summary>
              Show the license dialog for design-time.
            </summary>
            <param name="componentType">
              A <see cref="T:System.Type"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the valid product package for the specified component.
            </param>
            <param name="license">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> indicates the final license for the specified component.
            </param>
            <param name="instance">
              A component that requests the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.ShowRunTimeLicenseDialog(System.Type,GrapeCity.Licenses.PowerToolsLicense,System.Reflection.Assembly,System.Object)">
            <summary>
              Show the license dialog for run-time.
            </summary>
            <param name="componentType">
              A <see cref="T:System.Type"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <param name="license">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> indicates the final license for the specified component.
            </param>
            <param name="licenseLocation">
              A <see cref="T:System.Reflection.Assembly"/> indicates the location of the <paramref name="license"/>. For Run-Time, it is the assembly where the license resource embeded; for Design-Time, it should be null.
            </param>
            <param name="instance">
              A component that requests the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.ShouldEndApplication(GrapeCity.Licenses.PowerToolsLicense)">
            <summary>
              Determines whether should end the current application.
            </summary>
            <param name="license">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> indicates the final license for the specified component.
            </param>
            <returns>
              <c>true</c> to end application; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.EndApplication(System.Type,GrapeCity.Licenses.PowerToolsLicense)">
            <summary>
              End the current application if the license is invalid. By default, a <see cref="T:System.ComponentModel.LicenseException"/> will be thrown.
            </summary>
            <param name="componentType">
              A <see cref="T:System.Type"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <param name="license">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> indicates the invalid license.
            </param>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetEndApplicationMessage(GrapeCity.Licenses.PowerToolsLicense,System.Type)">
            <summary>
              Get the message that will be shown when end the application.
            </summary>
            <param name="license">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> indicates the invalid license.
            </param>
            <param name="componentType">
              A <see cref="T:System.Type"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <rreturns>
              The message to display. By default it is the message of <see cref="T:System.ComponentModel.LicenseException"/>.
            </rreturns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.OnError(System.Int32,System.Type,System.Boolean)">
            <summary>
              Process the error when check license.
            </summary>
            <param name="errorCode">
              An <c>int</c> value indicates the error code.
            </param>
            <param name="type">
              A <see cref="T:System.Type"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <param name="allowExceptions">
              <c>true</c> if a <see cref="T:System.ComponentModel.LicenseException"/> should be thrown when a component cannot be granted a license; otherwise, <c>false</c>.
            </param>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.ShowAboutBox(System.Type)">
            <summary>
              Show about box for the specified component.
            </summary>
            <param name="componentType">
              The <see cref="T:System.Type"/> of the component.
            </param>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.VerifyDesignTimeEnvironment">
            <summary>
              Verify the environment to get whether the component is in design-time. 
            </summary>
            <returns>
              <c>true</c> if it is in design-time; otherwise <c>false</c>.
            </returns>
            <remarks>
              In DesignTime, because of IDE bugs, some component are not created with DesigntimeLicenseContext. 
              For example, when drag a control from Win Forms DataSource tool window, or use a web control in a ASP.NET Template.
              This may cause the control do run-time license validation and found that there is no license.
              To resolve this problem, we will check the environment and decide whether to do design-time license validation again.
            </remarks>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetDesignTimeLicense(System.ComponentModel.LicenseContext,System.Type,GrapeCity.Licenses.ProductInfo@,GrapeCity.Licenses.PowerToolsLicense@)">
            <summary>
              Get the license for Design-Time. You can override this method to implement your own logic, and call <see cref="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetDesignTimeLicenseFromRegistry(System.ComponentModel.LicenseContext,GrapeCity.Licenses.ProductInfo,GrapeCity.Licenses.PowerToolsLicense@)"/> in your code.
            </summary>
            <param name="context">
              A <see cref="T:System.ComponentModel.LicenseContext"/> that specifies where you can use the licensed object.
            </param>
            <param name="componentType">
              A <see cref="T:System.Type"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the valid product package for the specified component.
            </param>
            <param name="license">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> indicates the final license for the specified component.
            </param>
            <returns>
              An <c>int</c> value indicates the error code. 0 is success.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetDesignTimeLicenseFromRegistry(System.ComponentModel.LicenseContext,GrapeCity.Licenses.ProductInfo,GrapeCity.Licenses.PowerToolsLicense@)">
            <summary>
              Get the license for Design-Time.
            </summary>
            <param name="context">
              A <see cref="T:System.ComponentModel.LicenseContext"/> that specifies where you can use the licensed object.
            </param>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the valid product package for the specified component.
            </param>
            <param name="license">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> indicates the license for the specified component.
            </param>
            <returns>
              An <c>int</c> value indicates the error code. 0 is success.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetRunTimeLicense(System.ComponentModel.LicenseContext,System.Type,GrapeCity.Licenses.PowerToolsLicense@,System.Reflection.Assembly@)">
            <summary>
              Get the license for Run-Time. You can override this method to implement your own logic, and call <see cref="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetRunTimeLicenseFromAppDomain(GrapeCity.Licenses.ProductInfo,System.String)"/> or <see cref="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetRunTimeLicenseFromAssembly(System.Reflection.Assembly,GrapeCity.Licenses.ProductInfo,System.String)"/> in your code.
            </summary>
            <param name="context">
              A <see cref="T:System.ComponentModel.LicenseContext"/> that specifies where you can use the licensed object.
            </param>
            <param name="componentType">
              A <see cref="T:System.Type"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <param name="license">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> indicates the license for the specified component.
            </param>
            <param name="licenseLocation">
              A <see cref="T:System.Reflection.Assembly"/> indicates the location of the <paramref name="license"/>.
            </param>
            <returns>
              An <c>int</c> value indicates the error code. 0 is success.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetRunTimeLicenseFromAppDomain(GrapeCity.Licenses.ProductInfo,System.String)">
            <summary>
              Get the license for Run-Time from current <see cref="T:System.AppDomain"/>.
            </summary>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the valid product package for the specified component.
            </param>
            <param name="licensedComponentType">
              A <see cref="T:System.String"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <returns>
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> for the specified component. It could be null.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetRunTimeLicenseFromAssembly(System.Reflection.Assembly,GrapeCity.Licenses.ProductInfo,System.String)">
            <summary>
              Get the license for Run-Time from a specified <see cref="T:System.Reflection.Assembly"/>.
            </summary>
            <param name="assembly">
              The <see cref="T:System.Reflection.Assembly"/> where to retrieve the license.
            </param>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the valid product package for the specified component.
            </param>
            <param name="licensedComponentType">
              A <see cref="T:System.String"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <returns>
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> for the specified component. It could be null.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetRuntimePackagecodeString(GrapeCity.Licenses.ProductInfo)">
            <summary>
            Get the package code string from product info
            </summary>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the valid product package for the specified component.
            </param>
            <returns>Returns the package code string</returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetRuntimePackagecodeString(System.String)">
            <summary>
            Get the package code string from license Data
            </summary>
            <param name="licenseRawString">
              A string indciates the license resources
            </param>
            <returns>Returns the package code string</returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.SaveLicenseData(System.ComponentModel.LicenseContext,GrapeCity.Licenses.ProductInfo,System.Type,GrapeCity.Licenses.PowerToolsLicenseProvider.LicenseData)">
            <summary>
              Save the license data into <see cref="T:System.ComponentModel.LicenseContext"/>. The license will be saved at Design-Time and loaded at Run-Time.
            </summary>
            <param name="context">
              The <see cref="T:System.ComponentModel.LicenseContext"/> to save license data.
            </param>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the valid product package for the specified component.
            </param>
            <param name="componentType">
              The <see cref="T:System.Type"/> of the component who own the license.
            </param>
            <param name="licenseData">
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicenseProvider.LicenseData"/> indicates the binary format for a license.
            </param>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.RemoveVersionInformation(System.String)">
            <summary>
            Removes the "v50, Version=6.0.2009.0728" string from type's assemblyqualifiedname
            </summary>
            <param name="assemblyQualifiedName">Indicates the type's assemblyqualifiedname </param>
            <returns>Returns the type string which ignored the version information</returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.DeserializeLicenseStream(System.IO.Stream,System.String,System.String)">
            <summary>
            Try to deserialze the license hashtable from the resource stream
            </summary>
            <param name="stream">
              The <see cref="T:System.IO.Stream"/> who contains the license data. It is created by <see cref="M:System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)"/>.
            </param>
            <param name="fileName">
              A <c>string</c> indicates the file name of the ".license" file. It is used as a crypto key.
            </param>
            <param name="licensedComponentType">
              The <see cref="T:System.String"/> of the component who own the license.
            </param>
            <returns>Returns the license data</returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.UnwrapGcLicenseString(System.String,System.String@)">
            <summary>
            Unwrap license string from raw data
            </summary>
            <param name="licensedComponentType">Indicates the licensed component type</param>
            <param name="rawLicenseString">Indicates the license string from the licese hashtable value</param>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.RetriveLicenseData(System.IO.Stream,System.String,GrapeCity.Licenses.ProductInfo,System.String)">
            <summary>
            Gets the license data from stream
            </summary>
            <param name="stream">
              The <see cref="T:System.IO.Stream"/> who contains the license data. It is created by <see cref="M:System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)"/>.
            </param>
            <param name="fileName">
              A <c>string</c> indicates the file name of the ".license" file. It is used as a crypto key.
            </param>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the valid product package for the specified component.
            </param>
            <param name="licensedComponentType">
              The <see cref="T:System.String"/> of the component who own the license.
            </param>
            <returns>
              Returns the license key and value.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.LoadLicenseData(System.IO.Stream,System.String,GrapeCity.Licenses.ProductInfo,System.String,System.Collections.IDictionary)">
            <summary>
              Load the license data from a <see cref="T:System.IO.Stream"/>. The license data is saved at Design-Time and loaded at Run-Time.
            </summary>
            <param name="stream">
              The <see cref="T:System.IO.Stream"/> who contains the license data. It is created by <see cref="M:System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)"/>.
            </param>
            <param name="fileName">
              A <c>string</c> indicates the file name of the ".license" file. It is used as a crypto key.
            </param>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the valid product package for the specified component.
            </param>
            <param name="licensedComponentType">
              The <see cref="T:System.String"/> of the component who own the license.
            </param>
            <param name="licenseDataCache">
              A cache to save license data. The key of the cache is component type and the value is a LicenseData. It is used to improve performance.
            </param>
            <returns>
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicenseProvider.LicenseData"/> indicates the binary format for a license.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.RunActivateTool(GrapeCity.Licenses.ProductInfo)">
            <summary>
              Run the PowerTools activate tool for the specified product.
            </summary>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates whose activate tool should be run.
            </param>
        </member>
        <member name="F:GrapeCity.Licenses.PowerToolsLicenseProvider._designtimeContext">
            <summary>
              Cache a license context for create instance with designtime license validation.
            </summary>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.CreateInstanceWithDesigntime(System.Type)">
            <summary>
              Creates an instance of the specified type and do designtime license validation for it.
            </summary>
            <param name="type">
              A <see cref="T:System.Type"/> that represents the type to create.
            </param>
            <returns>
              An instance of the specified type.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.CreateInstanceWithDesigntime(System.Type,System.Object[])">
            <summary>
              Creates an instance of the specified type and do designtime license validation for it.
            </summary>
            <param name="type">
              A <see cref="T:System.Type"/> that represents the type to create.
            </param>
            <param name="args">
              An array of type <see cref="T:System.Object"/> that represents the arguments for the type.
            </param>
            <returns>
              An instance of the specified type.
            </returns>
        </member>
        <member name="P:GrapeCity.Licenses.PowerToolsLicenseProvider.DefaultProductInfo">
            <summary>
              Gets the default product information. The info will be used in <see cref="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetDesignTimeLicense(System.ComponentModel.LicenseContext,System.Type,GrapeCity.Licenses.ProductInfo@,GrapeCity.Licenses.PowerToolsLicense@)"/>.
            </summary>
            <value>
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the default product info.
              It is used in <see cref="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetDesignTimeLicense(System.ComponentModel.LicenseContext,System.Type,GrapeCity.Licenses.ProductInfo@,GrapeCity.Licenses.PowerToolsLicense@)"/>. If you override <see cref="M:GrapeCity.Licenses.PowerToolsLicenseProvider.GetDesignTimeLicense(System.ComponentModel.LicenseContext,System.Type,GrapeCity.Licenses.ProductInfo@,GrapeCity.Licenses.PowerToolsLicense@)"/> and write you logic, this value could be null.
            </value>
        </member>
        <member name="T:GrapeCity.Licenses.PowerToolsLicenseProvider.sac">
            <summary>
              Represents a wrapper class of sac.dll.
            </summary>
        </member>
        <member name="T:GrapeCity.Licenses.PowerToolsLicenseProvider.ShowDialogDummy">
            <summary>
              Represents a dummy to show dialog.
            </summary>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.ShowDialogDummy.#ctor(GrapeCity.Licenses.PowerToolsLicenseProvider,System.Type,GrapeCity.Licenses.ProductInfo,GrapeCity.Licenses.PowerToolsLicense,System.Reflection.Assembly,System.Object)">
            <summary>
              Initialize a new instance of <see cref="T:GrapeCity.Licenses.PowerToolsLicenseProvider.ShowDialogDummy"/>.
            </summary>
            <param name="provider">
              The <see cref="T:GrapeCity.Licenses.PowerToolsLicenseProvider"/> of the dummy.
            </param>
            <param name="componentType">
              A <see cref="T:System.Type"/> that represents the component requesting the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
            <param name="product">
              A <see cref="T:GrapeCity.Licenses.ProductInfo"/> indicates the valid product package for the specified component.
            </param>
            <param name="license">
              The <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> to display by the license dialog.
            </param>
            <param name="licenseLocation">
              The <see cref="T:System.Reflection.Assembly"/> who contains the license.
            </param>
            <param name="instance">
              A component that requests the <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </param>
        </member>
        <member name="T:GrapeCity.Licenses.PowerToolsLicenseProvider.LicenseData">
            <summary>
              Represents the binary data for <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.LicenseData.#ctor(GrapeCity.Licenses.PowerToolsLicense)">
            <summary>
              Initialize a new instance of <see cref="T:GrapeCity.Licenses.PowerToolsLicenseProvider.LicenseData"/>.
            </summary>
            <param name="license">
              The <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> which want to convert to binary data.
            </param>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.LicenseData.#ctor(System.String)">
            <summary>
              Initialize a new instance of <see cref="T:GrapeCity.Licenses.PowerToolsLicenseProvider.LicenseData"/>.
            </summary>
            <param name="encryptedData">
              A <see cref="T:System.String"/> contains the binary data for <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> in base64 format.
            </param>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.LicenseData.GetData">
            <summary>
              Get the binary data.
            </summary>
            <returns>
              A <see cref="T:System.String"/> contains the binary data in base64 format.
            </returns>
        </member>
        <member name="M:GrapeCity.Licenses.PowerToolsLicenseProvider.LicenseData.GetLicense">
            <summary>
              Get the license.
            </summary>
            <returns>
              A <see cref="T:GrapeCity.Licenses.PowerToolsLicense"/> stored in the binary data.
            </returns>
        </member>
        <member name="T:GrapeCity.Licenses.ProductInfo">
            <summary>
              Represents a set of product information.
            </summary>
        </member>
        <member name="M:GrapeCity.Licenses.ProductInfo.#ctor(System.UInt16,System.UInt16,System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Licenses.ProductInfo"/> class.
            </summary>
            <param name="vendorCode">
              The vendor code of the product.
            </param>
            <param name="packageCode">
              The package code of the product.
            </param>
            <param name="guid">
              The GUID of the product. Its format should be "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX".
            </param>
        </member>
        <member name="P:GrapeCity.Licenses.ProductInfo.VendorCode">
            <summary>
              Gets the vendor code of the product.
            </summary>
        </member>
        <member name="P:GrapeCity.Licenses.ProductInfo.PackageCode">
            <summary>
              Gets the package code of the product.
            </summary>
        </member>
        <member name="P:GrapeCity.Licenses.ProductInfo.Guid">
            <summary>
              Gets the GUID of the product.
            </summary>
        </member>
        <member name="F:GrapeCity.Licenses.WinForm.LicenseDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.Licenses.WinForm.LicenseDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GrapeCity.Licenses.WinForm.LicenseDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.C1Magnify">
            <summary>
            Represents the component which can be attached to any existing control,
            after long tap on the control, a magnifier will popup above the finger,
            and shows the info around the finger.
            </summary>
            <remarks>
            <para>
            A form can attach two or more <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> component, if has
            two or more fingers long tap on the attach control, only first magnifier popup.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> component. 
            </para>
            <para>
              You can copy the code to a exsit Windows Forms appliction. And set the form in the sample code as start form. 
            </para>
            <para>
              If you find a licenses error when run this code. Try to drag a <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> component to a 
              any Form from tool box can generate the licenses information to this project.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_C1MagnifyDemo"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_C1MagnifyDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Magnify.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Magnify.GetEnableMagnifier(System.Windows.Forms.Control)">
            <summary>
             Retrieves the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> associated with the specified control or not.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.Control"/> for which to retrieve the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/>.</param>
            <returns>
              <see langword="true"/> if the specified control will shows magnifier after press and hold; otherwise, <see langword="false"/>.
            </returns>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Magnify.SetEnableMagnifier(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Associates <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> with the specified control.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.Control"/> to associate the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/>.</param>
            <param name="value"><see langword="true"/> if associates <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> with the specified control. otherwise <see langword="false"/>.</param>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Magnify.OnMove(C1.Win.TouchToolKit.MagnifierEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1Magnify.Move"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.MagnifierEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Magnify.OnClosed(C1.Win.TouchToolKit.MagnifierEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1Magnify.Closed"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.MagnifierEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Magnify.OnMagnifierShowing(C1.Win.TouchToolKit.MagnifierShowingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1Magnify.MagnifierShowing"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.MagnifierShowingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Magnify.CanExtend(System.Object)">
            <summary>
            Specifies whether this object can provide its extender properties to the specified object.
            </summary>
            <param name="extendee">The <see cref="T:System.Object" /> to receive the extender properties.</param>
            <returns>
            true if this object can provide extender properties to the specified object; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Magnify.AboutBox">
            <summary>
              Shows the product information window.
            </summary>
            <remarks>
              A window which contains the product information is shown, after this method is called.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Magnify.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.PopupDelay">
            <summary>
            Gets or sets a value indicating the duration from finger press to magnifier popup in millisecond.
            </summary>
            <value>
            A <see cref="T:System.Int32"/> value that represents the duration from finger press to magnifier popup in millisecond. The default is 500.
            </value>
            <remarks>
            The minimum value of this property is limited, The value cannot be less than 1.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.MessageWhenClose">
            <summary>
            Gets or sets a value indicating which message will be posted to the attach control when magnifier closed.
            </summary>
            <value>
            One of the <see cref="P:C1.Win.TouchToolKit.C1Magnify.MessageWhenClose"/> values. The default is <see cref="F:C1.Win.TouchToolKit.MessageWhenClose.None">MessageWhenClose.None</see>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.MessageWhenMove">
            <summary>
            Gets or sets a value indicating which message will be posted to the attach control when magnifier is moving.
            </summary>
            <value>
            One of the <see cref="P:C1.Win.TouchToolKit.C1Magnify.MessageWhenMove"/> values. The default is <see cref="F:C1.Win.TouchToolKit.MessageWhenMove.Move">MessageWhenMove.Move</see>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.ShowCursor">
            <summary>
            Gets or sets a value indicating whether system cursor is displayed in the magnifier.
            </summary>
            <value>
            <see langword="true"/> if system cursor is displayed in the magnifier; otherwise, <see langword="false"/>.The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.Size">
            <summary>
            Gets or sets a value indicating the size of the magnifier in pixels.
            </summary>
            <value>
            A <see cref="P:C1.Win.TouchToolKit.C1Magnify.Size"/> value that represents the size of the magnifier in pixels. The default is 100,100.
            </value>
            <remarks>
            The scope of this property is limit, The value cannot be less than 1,1 and greater than 1024, 768.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.Shape">
            <summary>
            Gets or sets a value indicating the appearance of the magnifier.
            </summary>
            <value>
            One of the <see cref="T:C1.Win.TouchToolKit.MagnifierShape"/> values. The default is <see cref="F:C1.Win.TouchToolKit.MagnifierShape.Circle">MagnifierShape.Circle</see>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.BorderWidth">
            <summary>
              Gets or sets a value indicating the border width of the magnifier in pixels.
            </summary>
            <value>
            A <see cref="T:System.Int32"/> value that represents the border width of the magnifier in pixels. The default is 5.
            </value>
            <remarks>
            The minimum value of this property is limited, The value cannot be less than 1.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.BorderBackgroundMode">
            <summary>
            Gets or sets a value indicating the background mode used for the border of the magnifier.
            </summary>
            <value>
            One of the <see cref="T:C1.Win.TouchToolKit.BorderBackground"/> values. 
            The default is <see cref="F:C1.Win.TouchToolKit.BorderBackground.Light">C1.Win.TouchToolKit.BorderBackground.Light</see>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.BorderBackground">
            <summary>
            Gets or sets a value indicating the background image used for the border of the magnifier.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Image"/> value that represents the background image used for the magnifier. The default is <see langword="null"/>.
            </value>
            <remarks>
            This property only take effect when <see cref="P:C1.Win.TouchToolKit.C1Magnify.BorderBackgroundMode"/> property value
            is <see cref="F:C1.Win.TouchToolKit.BorderBackground.Custom">BorderBackground.Custom</see>.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.ZoomFactor">
            <summary>
            Gets or sets a value indicating the zoom factor of the magnifier.
            </summary>
            <value>
            A <see cref="T:System.Single"/> value that represents zoom factor of the magnifier. The default is 2f.
            </value>
            <remarks>
            The scope value of this property is limited, The value cannot be less than 2f and greater than 4f.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.IsHorizontalRailEnabled">
            <summary>
            Gets or sets a value indicating whether the magnifier will lock the move direction horizontally.
            </summary>
            <value>
            <see langword="true"/> if the magnifier will lock the move direction horizontally; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Magnify.IsVerticalRailEnabled">
            <summary>
            Gets or sets a value indicating whether the magnifier will lock the move direction vertically.
            </summary>
            <value>
            <see langword="true"/> if the magnifier will lock the move direction vertically; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1Magnify.Move">
            <summary>
            Occurs when the magnifier is moving.
            </summary>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
              <code lang = "CS" source="C1MagnifyEventDemo.cs" region = "ID_C1MagnifyEventDemo"/>
              <code lang = "VB" source="C1MagnifyEventDemo.vb" region = "ID_C1MagnifyEventDemo"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1Magnify.Closed">
            <summary>
            Occurs when the magnifier is closed.
            </summary>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Magnify.Move"/> event.
            </para>
              <code lang="CS" source="C1MagnifyEventDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1MagnifyEventDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1Magnify.MagnifierShowing">
            <summary>
            Occurs when the magnifier is opening.
            </summary>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Magnify.Move"/> event.
            </para>
              <code lang="CS" source="C1MagnifyEventDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1MagnifyEventDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.MessageWhenClose">
            <summary>
            Specifies the actions when close magnifier.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MessageWhenClose.None">
            <summary>
            Do not generate any extra message.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MessageWhenClose.LeftClick">
            <summary>
            Generate a left click for target control
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MessageWhenClose.RightClick">
            <summary>
            Generate a right click for target control
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.MessageWhenMove">
            <summary>
            Specifies the actions when move magnifier.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MessageWhenMove.None">
            <summary>
            Do not generate any extra message, <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> will block the default move message.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MessageWhenMove.Move">
            <summary>
            When finger move, system will continue send mouse move message to control.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MessageWhenMove.LeftDown">
            <summary>
            <see cref="T:C1.Win.TouchToolKit.C1Magnify"/> will block the default mouse move message and send continuous mouse down message to target control.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.MagnifierShape">
            <summary>
            Specifies the appearance of the magnifier.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MagnifierShape.Circle">
            <summary>
            The magnifier shape is circle.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MagnifierShape.Rectangle">
            <summary>
            The magnifier shape is rectangle.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MagnifierShape.RoundedRectangle">
            <summary>
            The magnifier shape is rounded rectangle.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.BorderBackground">
            <summary>
            Specifies the border appearance of the magnifier.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.BorderBackground.Light">
            <summary>
            The border background color is light color.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.BorderBackground.Dark">
            <summary>
            The border background color is dark color.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.BorderBackground.Custom">
            <summary>
            Use a specify image to render the border background. see to <see cref="P:C1.Win.TouchToolKit.C1Magnify.BorderBackground">C1Magnify.BorderBackground</see> property.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.MagnifierEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.TouchToolKit.C1Magnify.Closed"/> and <see cref="E:C1.Win.TouchToolKit.C1Magnify.Move"/>
            event.
            </summary>
            <remarks>
            <para>
            The <see cref="T:C1.Win.TouchToolKit.MagnifierEventArgs"/> contains information regarding position 
            and target control before the magnifier popup.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.MagnifierEventArgs"/> class. 
            </para>
              <code lang="CS" source="C1MagnifyEventDemo.cs" region="ID_C1MagnifyEventDemo"/>
              <code lang="VB" source="C1MagnifyEventDemo.vb" region="ID_C1MagnifyEventDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.MagnifierEventArgs.Position">
            <summary>
            Gets a value indicating the position.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Point"/> value that represents the position of the <see cref="T:C1.Win.TouchToolKit.C1Magnify"/>. 
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.MagnifierEventArgs"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.MagnifierEventArgs.TargetControl">
            <summary>
            Gets the target object which magnifier shows on it.
            </summary>
            <value>
            The target control which magnifier shows on it.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.MagnifierEventArgs"/> class.
            </para>
              <code lang="CS" source="C1MagnifyDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1MagnifyDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.MagnifierShowingEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.TouchToolKit.C1Magnify.MagnifierShowing"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.MagnifierShowingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="E:C1.Win.TouchToolKit.C1Magnify.MagnifierShowing">C1Magnify.MagnifierShowing</see> event is canceled.
            </summary>
            <value>
            <see langword="true"/> if show magnifier operation is canceled; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="F:C1.Win.TouchToolKit.MagnifierForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.MagnifierForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.MagnifierForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.C1ZoomPanel">
            <summary>
            Represents the component which can be enables you to group collections of controls and 
            made these controls can be zoom by two finger touch. 
            </summary>
            <remarks>
            <para>
            When the <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> loaded, <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> will change all C1ZoomPanel's 
            children control to a inner panel. In run time, you should use C1ZoomPanel.InnerControls property
            instead of C1ZoomPanel.Controls
            </para>
            <para>
            You can't use <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> and <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> together.
            </para>
            <para>
            <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> can't be a child of another <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/>.
            </para>
            <para>
            The <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> can't change the tooltip, contextMenu, common dialog's font and size.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> component. 
            </para>
            <para>
              You can copy the code to a exsit Windows Forms appliction. And set the form in the sample code as start form. 
            </para>
            <para>
              If you find a licenses error when run this code. Try to drag a <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> component to a 
              any Form from tool box can generate the licenses information to this project.
            </para>
              <code lang="CS" source="C1ZoomPanelDemo.cs" region="ID_C1ZoomPanelDemo"/>
              <code lang="VB" source="C1ZoomPanelDemo.vb" region="ID_C1ZoomPanelDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.OnVisibleChanged(System.EventArgs)">
            <summary>
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.OnCreateControl">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.OnParentChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <exception cref="T:System.Exception">C1ZoomPanel can't be a child of another C1ZoomPanel</exception>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.OnZoomFactorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1ZoomPanel.ZoomFactorChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.OnControlAutoShowing(C1.Win.TouchToolKit.ControlAutoShowingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1ZoomPanel.ControlAutoShowing"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ControlAutoShowingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.OnControlFontZooming(C1.Win.TouchToolKit.ControlFontZoomingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1ZoomPanel.ControlFontZooming"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ControlFontZoomingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.OnControlBoundsZooming(C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1ZoomPanel.ControlBoundsZooming"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.OnManipulationStarting(C1.Win.TouchToolKit.ZoomManipulationStartingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1ZoomPanel.ManipulationStarting"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ZoomManipulationStartingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.OnAnimationStarting(C1.Win.TouchToolKit.AnimationStartingEventArgs)">
            <summary>
            Raises the <see cref="E:AnimationStarting"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.AnimationStartingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.OnAnimationCompleted(System.EventArgs)">
            <summary>
            Raises the <see cref="E:AnimationCompleted"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.GetDisplayRectangle(System.Windows.Forms.Control)">
            <summary>
            Get control visibility rectangle.
            </summary>
            <param name="control">The target control</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> value that represents the control visibility area.</returns>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_007"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_007"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.BeginAddControls">
            <summary>
            Call this method before change child control collection.
            </summary>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.EndAddControls">
            <summary>
            Call this method after change child control collection.
            </summary>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.SetZoomFactor(System.Single,System.Boolean)">
            <summary>
            Sets the <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomFactor"/> and determines wheather use animation when change <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomFactor"/>.
            </summary>
            <param name="zoomFactor">The new zoom factor.</param>
            <param name="useAnimation">true to use animation; otherwise, false.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The assigned value is greater than <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.MaxZoomFactor"/> or less than 1.
            </exception>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.AnimationStartingEventArgs"/> class.
            </para>
              <code lang="CS" source="C1ZoomAnimationDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomAnimationDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.SetScrollLocation(System.Drawing.Point,System.Boolean)">
            <summary>
            Sets the <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ScrollLocation"/> and determines wheather use animation when change <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ScrollLocation"/>.
            </summary>
            <param name="scrollLocation">The scroll location.</param>
            <param name="useAnimation">true to use animation; otherwise, false.</param>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.AnimationStartingEventArgs"/> class.
            </para>
              <code lang="CS" source="C1ZoomAnimationDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomAnimationDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomPanel.AboutBox">
            <summary>
              Shows the product information window.
            </summary>
            <remarks>
              A window which contains the product information is shown, after this method is called.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.Site">
            <summary>
            Gets or sets the <see cref="T:System.ComponentModel.ISite"/> of the <see cref="T:System.ComponentModel.Component"/>.
            </summary>
            <returns>The <see cref="T:System.ComponentModel.ISite"/> associated with the <see cref="T:System.ComponentModel.Component"/>, 
            or null if the <see cref="T:System.ComponentModel.Component"/> is not encapsulated in an 
            <see cref="T:System.ComponentModel.IContainer"/>, the <see cref="T:System.ComponentModel.Component"/> does not have 
            an <see cref="T:System.ComponentModel.ISite"/> associated with it, or the <see cref="T:System.ComponentModel.Component"/> is
            removed from its <see cref="T:System.ComponentModel.IContainer"/>.</returns>
            <exception cref="T:System.Exception">A form can't attach two or more C1Zoom component</exception>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.AllowPinchZoom">
            <summary>
            Gets or sets a value indicating whether the panel can perform gesture zoom.
            </summary>
            <value>
            <see langword="true"/> if the panel can perform gesture zoom; otherwise, <see langword="false"/>. The default is <see langword="true"/>.
            </value>
            <example>
            <para>
              The following code example shows how to enable/disable the gesture zoom.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.MaxZoomFactor">
            <summary>
            Gets or sets the maximum zoom factor of the panel.
            </summary>
            <value>
            A <see cref="T:System.Single"/> value that represents the maximum zoom factor of the panel. The default is 4f.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value less than <b>1f</b> or more than <b>4f</b>.
            </exception>
            <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomFactor"/>
            <example>
            <para>
              The following code example shows how to set the maxmum value of zoom factor.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class.
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomSnapPoints">
            <summary>
            Gets a group of zoom factor, when zoom ending, the result zoom factor will try to snap to a zoom factor in this group.
            </summary>
            <value>
            A <see cref="T:System.Single"/> value list that represents a group of zoom factor, when zoom ending, the result zoom factor will
            try to snap to a zoom factor in this group.
            </value>
            <remarks>
            This property only take effect when <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomPreviewMode"/> property value is 
            <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.Bitmap">ZoomPreviewMode.Bitmap</see> and 
            <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent">ZoomPreviewMode.AlternativeContent</see>.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
              <code lang="CS" source="C1ZoomSnapPointDemo.cs" region="ID_C1ZoomSnapPointDemo"/>
              <code lang="VB" source="C1ZoomSnapPointDemo.vb" region="ID_C1ZoomSnapPointDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomSnapDistance">
            <summary>
            Gets or sets a value indicate the minimum distance that can cause current zoom factor snap to a zoom factor in <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomSnapPoints"/>.
            </summary>
            <value>
            A <see cref="T:System.Single"/> value that represents the minimum distance that can cause current zoom factor snap to a zoom factor in <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomSnapPoints"/>.
            </value>
            <remarks>
            This property only take effect when <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomPreviewMode"/> property value is 
            <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.Bitmap">ZoomPreviewMode.Bitmap</see> and
            <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent">ZoomPreviewMode.AlternativeContent</see>.
            </remarks>
            <seealso cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomSnapPoints"/>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
              <code lang="CS" source="C1ZoomSnapPointDemo.cs" region="ID_C1ZoomSnapPointDemo"/>
              <code lang="VB" source="C1ZoomSnapPointDemo.vb" region="ID_C1ZoomSnapPointDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomFactor">
            <summary>
              Gets or sets the zoom factor of the panel.
            </summary>
            <value>
              A <see cref="T:System.Single"/> value that represents the zoom factor of the panel.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The assigned value is greater than <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.MaxZoomFactor"/> or less than 1.
            </exception>
            <remarks>
              <para>
                The <b>ZoomFactor</b>'s range is from 1 to <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.MaxZoomFactor"/>.
              </para>
              <para>
                If the <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.AllowPinchZoom"/> property is <see langword="true"/> the user can change the <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomFactor"/> with gesture.
              </para>
            </remarks>
            <seealso cref="P:C1.Win.TouchToolKit.C1ZoomPanel.AllowPinchZoom"/>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class. 
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.AllowDoubleTapZoom">
            <summary>
            Gets or sets a value indicating whether allow double tap to zoom. <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomFactor"/> will change to 2f or <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.MaxZoomFactor"/> if it is less than 2f before double tap; otherwise, it will change to 1f.
            </summary>
            <value>
            <see langword="true"/> if allow double tap to zoom; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_007"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_007"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.AllowMouseWheelZoom">
            <summary>
            Gets or sets a value indicating whether allow zoom by control + mouse wheel.
            </summary>
            <value>
            <see langword="true"/> if user can zoom by mouse wheel; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.AllowMouseWheelScroll">
            <summary>
            Gets or sets which types of MouseWheel scroll are possible.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomPreviewMode">
            <summary>
            Gets or sets a value indicating how to preview the panel when gesture zooming.
            </summary>
            <value>
            One of the <see cref="T:C1.Win.TouchToolKit.ZoomPreviewMode"/> values. The default is  <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.Bitmap">ZoomPreviewMode.Bitmap</see>
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class. 
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.AlternativeContentSettings">
            <summary>
            Gets the settings indicating how to display zoom factor when gesture zooming.
            </summary>
            <value>
            An <see cref="T:C1.Win.TouchToolKit.AlternativeContentSettings"/> type value that indicates how to display zoom factor when gesture zooming.
            </value>
            <remarks>
            This setting only take effect when <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomPreviewMode"/> property value is
            <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent">ZoomPreviewMode.AlternativeContent</see>.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class. 
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.InnerControls">
            <summary>
            Gets the child controls of the panel.
            </summary>
            <value>
            The <see cref="T:System.Windows.Forms.Control.ControlCollection"/> value that represents the child controls of the panel.
            </value>
            <example>
            <para>
              The following code example shows how to use this method. C1Zoom use Controls property to get the all child controls,
              But C1ZoomPanel should use InnerControls to get.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property. 
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.BoundaryFeedbackMode">
            <summary>
            Gets or sets a value indicating how to show visual feedback when scroll reach end point.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.BoundaryFeedbackMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.BoundaryFeedbackMode.Split"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class. 
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.AllowPanScroll">
            <summary>
            Gets or sets a value indicating whether allow scroll the panel by pan gesture.
            </summary>
            <value>
            <see langword="true"/> if allow scroll the panel by pan gesture; otherwise, <see langword="false"/>.The default is <see langword="true"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollIndicatorMode"/> property. 
            </para>
              <code lang="CS" source="C1ZoomScrollDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomScrollDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.ScrollLocation">
            <summary>
            Gets or sets the scroll location of the panel.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Point"/> value that represents the scroll location of the panel in pixels. 
            </value>
            <remarks>
            <para>
            The <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ScrollLocation"/> property represents the location of the visible portion of a the panel. 
            Use this property to change the portion of the control that is displayed.
            </para>
            <para>
            <note>
            The <see cref="P:System.Drawing.Point.X"/> and <see cref="P:System.Drawing.Point.Y"/> coordinate values retrieved are negative 
            if the control has scrolled away from its starting position (0,0). When you set this property, 
            you must always assign positive <see cref="P:System.Drawing.Point.X"/> and <see cref="P:System.Drawing.Point.Y"/> values to set 
            the scroll position relative to the starting position. For example, if you have a horizontal 
            scroll bar and you set x and y to 200, you move the scroll 200 pixels to the right; if you 
            then set x and y to 100, the scroll appears to jump the left by 100 pixels, because you are 
            setting it 100 pixels away from the starting position. In the first case, <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ScrollLocation"/> 
            returns {-200, 0}; in the second case, it returns {-100,0}.
            </note>
            </para>
            <para>
            If the set value bigger than scrollable maximum value, the <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ScrollLocation"/> will adjust the value 
            to maximum value automatically. And also, if the set value smaller than scrollable minimum value, the 
            <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ScrollLocation"/> will adjust the value to minimum value automatically.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollIndicatorMode"/> property. 
            </para>
              <code lang="CS" source="C1ZoomScrollDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomScrollDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.ScrollIndicatorMode">
            <summary>
            Gets or sets a value indicating which mode to indicate current scroll location.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.ScrollIndicatorMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.ScrollIndicatorMode.ScrollIndicator"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollIndicatorMode"/> property. 
            </para>
              <code lang="CS" source="C1ZoomScrollDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomScrollDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.IsHorizontalRailEnabled">
            <summary>
            Gets or sets a value that indicates whether the scroll rail is enabled for the horizontal axis.
            </summary>
            <value>
            <see langword="true"/> to enable the horizontal scroll rail; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.IsVerticalRailEnabled">
            <summary>
            Gets or sets a value that indicates whether the scroll rail is enabled for the vertical axis.
            </summary>
            <value>
            <see langword="true"/> to enable the vertical scroll rail; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomTargets">
            <summary>
            Gets the collection of controls that can receive the zoom gesture message.
            </summary>
            <value>
            An collection of controls that can receive the zoom gesture message.
            </value>
            <remarks>
            The <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> will do nothing while the user do zoom gesture at the controls on the collection. 
            </remarks>
            <example>
            <para>
              The following code example shows how use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_006"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_006"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomPolicies">
            <summary>
            Gets the custom zoom policies. <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> will look for zoom policies in this
            list.
            </summary>
            <value>
            A list of custom <see cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="DataGridViewZoomPolicyDemo.cs" region="ID_001"/>
              <code lang="VB" source="DataGridViewZoomPolicyDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.DefaultZoomPolicies">
            <summary>
            Gets the default zoom policies.
            </summary>
            <value>
            The default zoom policies.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="DataGridViewZoomPolicyDemo.cs" region="ID_003"/>
              <code lang="VB" source="DataGridViewZoomPolicyDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.AutoShowControl">
            <summary>
            Gets or sets a value that indicates whether the control auto show when get focus or touch keyboard popup.
            </summary>
            <value>
            <see langword="true"/> to auto show control; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.FeedbackAreaBackColor">
            <summary>
            Gets or sets the background color of blank areas in panel when to zoom and scroll.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value that represents the background color of blank areas in panel when to zoom and scroll.
            The default is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>, means use the BackColor of panel.
            </value>
            <remarks>
            The BackColor property does not support transparent colors.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> class.
            </para>
              <code lang="CS" source="C1ZoomPanelDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomPanelDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.FeedbackAreaBackgroundImage">
            <summary>
            Gets or sets the background image displayed in the blank areas of panel when to zoom and scroll.
            </summary>
            <value>
            An <see cref="T:System.Drawing.Image"/> value that represents the image to display in the blank areas of panel when to zoom and scroll.
            The default is <see langword="null"/>.
            </value>
            <remarks>
            Images with translucent or transparent colors are not supported by Windows panel controls as background images.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> class.
            </para>
              <code lang="CS" source="C1ZoomPanelDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomPanelDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.FeedbackAreaBackgroundImageLayout">
            <summary>
            Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout"/> enumeration.
            </summary>
            <value>
            One of the values of <see cref="T:System.Windows.Forms.ImageLayout"/> (<see cref="F:System.Windows.Forms.ImageLayout.Center"/> , <see cref="F:System.Windows.Forms.ImageLayout.None"/>, <see cref="F:System.Windows.Forms.ImageLayout.Stretch"/>, <see cref="F:System.Windows.Forms.ImageLayout.Tile"/>, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom"/>). <see cref="F:System.Windows.Forms.ImageLayout.Tile"/> is the default value.
            </value>
            <remarks>
            <para>
            Use the BackgroundImageLayout property to specify the position and behavior of an image you have placed onto the blank areas of panel when to zoom and scroll. BackgroundImageLayout takes effect only if the <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.FeedbackAreaBackgroundImage"/> property is set.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> class.
            </para>
              <code lang="CS" source="C1ZoomPanelDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomPanelDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.InnerPanel">
            <summary>
            Gets the inner panel that contains the target form's child controls.
            </summary>
            <remarks>
            The inner panel will fill the <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> after <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> became visible. 
            So the value of <see cref="P:System.Windows.Forms.Control.Capture"/> property of <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> is incorrect, you should use 
            <see cref="P:System.Windows.Forms.Control.Capture"/> property of inner panel instead.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomPanel.InnerPanelLayoutMode">
            <summary>
             Gets or sets the layout mode of InnerPanel.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.InnerPanelLayoutMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.InnerPanelLayoutMode.None"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1ZoomPanel.ZoomFactorChanged">
            <summary>
             Occurs when <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomFactor"/> changed.
            </summary>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1ZoomPanel.ControlAutoShowing">
            <summary>
            Occurs before <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> start show the target control. 
            </summary>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1ZoomPanel.ControlFontZooming">
            <summary>
            Occurs before <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> start zoom the target control's font. 
            </summary>
            <remarks>
            <para>
            You can set <see cref="P:C1.Win.TouchToolKit.ControlFontZoomingEventArgs.Handled"/> to avoid default logic of <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> for current control.
            </para>
            <para>
            You can set <see cref="P:C1.Win.TouchToolKit.ControlFontZoomingEventArgs.ChildrenHandled"/> to avoid default logic of <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> for current control's child control.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1ZoomPanel.ControlBoundsZooming">
            <summary>
            Occurs before <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> start zoom the target control's bounds. 
            </summary>
            <remarks>
            <para>
            You can set <see cref="P:C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs.Handled"/> to avoid default logic of <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> for current control.
            </para>
            <para>
            You can set <see cref="P:C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs.ChildrenHandled"/> to avoid default logic of <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> for current control's child control.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1ZoomPanel.ManipulationStarting">
            <summary>
            Occurs when the manipulation processor is first created.
            </summary>
            <remarks>
            <para>
            This event is a routed event. The <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> must have a <see cref="T:C1.Win.TouchToolKit.ManipulationModes"/> 
            other than <see cref="F:C1.Win.TouchToolKit.ManipulationModes.None"/> to be a manipulation event source. 
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1ZoomPanel.AnimationStarting">
            <summary>
            Occurs before <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/> start animation.
            </summary>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.AnimationStartingEventArgs"/> class.
            </para>
              <code lang="CS" source="C1ZoomAnimationDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomAnimationDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1ZoomPanel.AnimationCompleted">
            <summary>
            Occurs when animation is completed.
            </summary>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.AnimationStartingEventArgs"/> class.
            </para>
              <code lang="CS" source="C1ZoomAnimationDemo.cs" region="ID_006"/>
              <code lang="VB" source="C1ZoomAnimationDemo.vb" region="ID_006"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.C1MultiScaleImage">
            <summary>
            Represents a control which can display different images for different zoom factor of the control.
            </summary>
            <example>
            <para>
              The following code example shows how to use the <see cref="T:C1.Win.TouchToolKit.C1MultiScaleImage"/> component. 
            </para>
            <para>
              You can copy the code to a exsit Windows Forms appliction. And set the form in the sample code as start form. 
            </para>
            <para>
              If you find a licenses error when run this code. Try to drag a <see cref="T:C1.Win.TouchToolKit.C1MultiScaleImage"/> component to a 
              any Form from tool box can generate the licenses information to this project.
            </para>
              <code lang="CS" source="C1MultiScaleImageDemo.cs" region="ID_C1MultiScaleImageDemo"/>
              <code lang="VB" source="C1MultiScaleImageDemo.vb" region="ID_C1MultiScaleImageDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1MultiScaleImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1MultiScaleImage"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1MultiScaleImage.AboutBox">
            <summary>
              Shows the product information window.
            </summary>
            <remarks>
              A window which contains the product information is shown, after this method is called.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1MultiScaleImage.ZoomFactor">
            <summary>
            Gets or sets the zoom factor of the control.
            </summary>
            <value>
              A <see cref="T:System.Single"/> value that represents the zoom factor of the control.
              The default is <b>1f</b>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The assigned value is less than 1.
            </exception>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1MultiScaleImage"/> class.
            </para>
              <code lang="CS" source="C1MultiScaleImageDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1MultiScaleImageDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1MultiScaleImage.Images">
            <summary>
            Gets the a group of <see cref="T:C1.Win.TouchToolKit.ImageItem"/> that display specific image in specific zoom factor.
            </summary>
            <value>
            An <see cref="T:System.Collections.Generic.IList`1"/> value that represents a group of <see cref="T:C1.Win.TouchToolKit.ImageItem"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1MultiScaleImage"/> class.
            </para>
              <code lang="CS" source="C1MultiScaleImageDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1MultiScaleImageDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.ImageItem">
            <summary>
            Represents a image which will be displayed in a <see cref="T:C1.Win.TouchToolKit.C1MultiScaleImage"/> and how much the <see cref="P:C1.Win.TouchToolKit.C1MultiScaleImage.ZoomFactor"/> is to display the image.
            </summary>
            <example>
            <para>
              The following code example shows how to use the <see cref="T:C1.Win.TouchToolKit.ImageItem"/> class. 
            </para>
              <code lang="CS" source="C1MultiScaleImageDemo.cs" region="ID_C1MultiScaleImageDemo"/>
              <code lang="VB" source="C1MultiScaleImageDemo.vb" region="ID_C1MultiScaleImageDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.ImageItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.ImageItem"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.ImageItem.#ctor(System.Drawing.Image,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.ImageItem"/> class.
            </summary>
            <param name="image">An <see cref="P:C1.Win.TouchToolKit.ImageItem.Image"/> value that represents the image to display in a <see cref="T:C1.Win.TouchToolKit.C1MultiScaleImage"/>.</param>
            <param name="zoomFactor">A <see cref="T:System.Single"/> value that indicate how much the <see cref="P:C1.Win.TouchToolKit.C1MultiScaleImage.ZoomFactor"/> is to display <see cref="P:C1.Win.TouchToolKit.ImageItem.Image"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The assigned value of zoomFactor is less than or equal to 1.
            </exception>
        </member>
        <member name="P:C1.Win.TouchToolKit.ImageItem.Image">
            <summary>
            Gets or sets the image which will be displayed in a <see cref="T:C1.Win.TouchToolKit.C1MultiScaleImage"/> when <see cref="P:C1.Win.TouchToolKit.C1MultiScaleImage.ZoomFactor"/> is equal to <see cref="P:C1.Win.TouchToolKit.ImageItem.ZoomFactor"/>.
            </summary>
            <value>
            An <see cref="P:C1.Win.TouchToolKit.ImageItem.Image"/> value that represents the image to display. The default is The default is <see langword="null"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ImageItem"/> class.
            </para>
              <code lang="CS" source="C1MultiScaleImageDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1MultiScaleImageDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ImageItem.ZoomFactor">
            <summary>
            Gets or sets a value indicate how much the <see cref="P:C1.Win.TouchToolKit.C1MultiScaleImage.ZoomFactor"/> is to display <see cref="P:C1.Win.TouchToolKit.ImageItem.Image"/>.
            </summary>
            <value>
            A <see cref="T:System.Single"/> value that indicate how much the <see cref="P:C1.Win.TouchToolKit.C1MultiScaleImage.ZoomFactor"/> is to display <see cref="P:C1.Win.TouchToolKit.ImageItem.Image"/>.
            The default is <b>2f</b>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The assigned value is less than or equal to 1.
            </exception>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ImageItem"/> class.
            </para>
              <code lang="CS" source="C1MultiScaleImageDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1MultiScaleImageDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.AlternativeContentSettings">
            <summary>
            Represents the settings indicating how to display zoom factor when gesture zooming.
            </summary>
            <remarks>
            This setting only take effect when <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomPreviewMode"/> property value is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent">ZoomPreviewMode.AlternativeContent</see>.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.AlternativeContentSettings.Format">
            <summary>
            Gets or sets the format of alternative content preview text when gesture zooming.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that represents the format of alternative content preview text when gesture zooming.
            </value>
            <exception cref="T:System.FormatException">
              The assigned value is not a valid format string.
            </exception>
        </member>
        <member name="P:C1.Win.TouchToolKit.AlternativeContentSettings.Font">
            <summary>
            Gets or sets the font of alternative content preview text when gesture zooming.
            </summary>
            <value>
            A <see cref="P:C1.Win.TouchToolKit.AlternativeContentSettings.Font"/> value that represents the font of alternative content preview text when gesture zooming.
            The default is <see langword="null"/>, means use the font of form.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.AlternativeContentSettings.ForeColor">
            <summary>
            Gets or sets the color of alternative content preview text when gesture zooming.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value that represents the color of alternative content preview text when gesture zooming.
            The default is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>, means use the fore color of the form.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.AnimationStartingEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1Zoom.AnimationStarting">C1Zoom.AnimationStarting</see> event and <see cref="E:C1.Win.TouchToolKit.C1ZoomPanel.AnimationStarting">C1ZoomPanel.AnimationStarting</see>.
            </summary>
            <example>
            <para>
              The following code example shows how to use this class to customize the animiation.
            </para>
              <code lang="CS" source="C1ZoomAnimationDemo.cs" region="ID_C1ZoomAnimationDemo"/>
              <code lang="VB" source="C1ZoomAnimationDemo.vb" region="ID_C1ZoomAnimationDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.AnimationStartingEventArgs.CurrentZoomFactor">
            <summary>
            Gets the current zoom factor.
            </summary>
            <value>The current zoom factor.</value>
        </member>
        <member name="P:C1.Win.TouchToolKit.AnimationStartingEventArgs.TargetZoomFactor">
            <summary>
            Gets the target zoom factor.
            </summary>
            <value>The target zoom factor.</value>
        </member>
        <member name="P:C1.Win.TouchToolKit.AnimationStartingEventArgs.CurrentScrollLocation">
            <summary>
            Gets the current scroll location.
            </summary>
            <value>The current scroll location.</value>
        </member>
        <member name="P:C1.Win.TouchToolKit.AnimationStartingEventArgs.TargetScrollLocation">
            <summary>
            Gets the target scroll location.
            </summary>
            <value>The target scroll location.</value>
        </member>
        <member name="P:C1.Win.TouchToolKit.AnimationStartingEventArgs.Duration">
            <summary>
            Gets or sets the duration of animation.
            </summary>
            <value>The duration of animation.</value>
        </member>
        <member name="P:C1.Win.TouchToolKit.AnimationStartingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this animation is canceled.
            </summary>
            <value>
            <see langword="true"/> if this animation is canceled; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.C1ApplicationZoom">
            <summary>
            Represents the component which can be attached to any existing form, and made all forms in current application can be zoom by two finger touch. 
            </summary>
            <remarks>
            <para>
            The <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> will try to find all forms in current application, and then attach a <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>
            component to the found forms. Before attach <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> will initialize the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>'s setting by 
            this own settings. And then raise <see cref="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomAttaching"/> and <see cref="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomAttached"/> event. User can change the initial
            in this events' event handler and user can cancel attach in <see cref="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomAttaching"/> event by set <see cref="T:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs"/>'s
            <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.Cancel"/> property to <see langword="true"/>.
            </para>
            <para>
            If the form has attached a <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>, the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> do not attach it again.
            </para>
            <para>
            The <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> can't make the tooltip, contextMenu, common dialog's has gesture zoom ability.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> component. 
            </para>
            <para>
              You can copy the code to a exsit Windows Forms appliction. And set the form in the sample code as start form. 
            </para>
            <para>
              If you find a licenses error when run this code. Try to drag a <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> component to a 
              any Form from tool box can generate the licenses information to this project.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_C1ApplicationZoomDemo"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_C1ApplicationZoomDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ApplicationZoom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ApplicationZoom.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </summary>
            <param name="container">
            An <see cref="T:System.ComponentModel.IContainer"/> representing the container of the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/>.
            </param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ApplicationZoom.GetC1Zoom(System.Windows.Forms.Form)">
            <summary>
            Gets the associated <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> by a specific form.
            </summary>
            <param name="form">The form.</param>
            <returns>
            A <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> value that associated to specific form.
            </returns>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ApplicationZoom.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ApplicationZoom.AboutBox">
            <summary>
              Shows the product information window.
            </summary>
            <remarks>
              A window which contains the product information is shown, after this method is called.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ApplicationZoom.OnC1ZoomAttaching(C1.Win.TouchToolKit.C1ZoomAttachingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomAttaching"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ApplicationZoom.OnC1ZoomAttached(C1.Win.TouchToolKit.C1ZoomAttachedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomAttached"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ApplicationZoom.OnC1ZoomDetached(C1.Win.TouchToolKit.C1ZoomDetachedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomDetached"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.AllowPinchZoom">
            <summary>
            Gets or sets a value indicating whether the form can perform gesture zoom.
            </summary>
            <value>
            <see langword="true"/> if the form can perform gesture zoom; otherwise, <see langword="false"/>. The default is <see langword="true"/>.
            </value>
            <example>
            <para>
              The following code example shows how to enable/disable the gesture zoom.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.MaxZoomFactor">
            <summary>
            Gets or sets the maximum zoom factor of the form.
            </summary>
            <value>
            A <see cref="T:System.Single"/> value that represents the maximum zoom factor of the form. The default is 4f.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value less than <b>1f</b> or more than <b>4f</b>.
            </exception>
            <example>
            <para>
              The following code example shows how to set the maxmum value of zoom factor.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class.
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.ZoomSnapPoints">
            <summary>
            Gets a group of zoom factor, when zoom ending, the result zoom factor will try to snap to a zoom factor in this group.
            </summary>
            <value>
            A <see cref="T:System.Single"/> value list that represents a group of zoom factor, when zoom ending, the result zoom factor will try to snap to a zoom factor in this group.
            </value>
            <remarks>
            This property only take effect when <see cref="P:C1.Win.TouchToolKit.C1ApplicationZoom.ZoomPreviewMode"/> property value is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.Bitmap">ZoomPreviewMode.Bitmap</see> and <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent">ZoomPreviewMode.AlternativeContent</see>.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
              <code lang="CS" source="C1ZoomSnapPointDemo.cs" region="ID_C1ZoomSnapPointDemo"/>
              <code lang="VB" source="C1ZoomSnapPointDemo.vb" region="ID_C1ZoomSnapPointDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.ZoomSnapDistance">
            <summary>
            Gets or sets a value indicate the minimum distance that can cause current zoom factor snap to a zoom factor in <see cref="P:C1.Win.TouchToolKit.C1ApplicationZoom.ZoomSnapPoints"/>.
            </summary>
            <value>
            A <see cref="T:System.Single"/> value that represents the minimum distance that can cause current zoom factor snap to a zoom factor in <see cref="P:C1.Win.TouchToolKit.C1ApplicationZoom.ZoomSnapPoints"/>.
            </value>
            <remarks>
            This property only take effect when <see cref="P:C1.Win.TouchToolKit.C1ApplicationZoom.ZoomPreviewMode"/> property value is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.Bitmap">ZoomPreviewMode.Bitmap</see> and <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent">ZoomPreviewMode.AlternativeContent</see>.
            </remarks>
            <seealso cref="P:C1.Win.TouchToolKit.C1ApplicationZoom.ZoomSnapPoints"/>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
              <code lang="CS" source="C1ZoomSnapPointDemo.cs" region="ID_C1ZoomSnapPointDemo"/>
              <code lang="VB" source="C1ZoomSnapPointDemo.vb" region="ID_C1ZoomSnapPointDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.AllowDoubleTapZoom">
            <summary>
            Gets or sets a value indicating whether allow double tap to zoom. <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomFactor"/> will change to 2f or <see cref="P:C1.Win.TouchToolKit.C1Zoom.MaxZoomFactor"/> if it is less than 2f before double tap; otherwise, it will change to 1f.
            </summary>
            <value>
            <see langword="true"/> if allow double tap to zoom; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_007"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_007"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.AllowMouseWheelZoom">
            <summary>
            Gets or sets a value indicating whether allow zoom by control + mouse wheel.
            </summary>
            <value>
            <see langword="true"/> if user can zoom by mouse wheel; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.AllowMouseWheelScroll">
            <summary>
            Gets or sets which types of MouseWheel scroll are possible.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.ZoomPreviewMode">
            <summary>
            Gets or sets a value indicating how to preview the form when gesture zooming.
            </summary>
            <value>
            One of the <see cref="T:C1.Win.TouchToolKit.ZoomPreviewMode"/> values. The default is  <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.Bitmap">ZoomPreviewMode.Bitmap</see>
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class. 
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.AlternativeContentSettings">
            <summary>
            Gets the settings indicating how to display zoom factor when gesture zooming.
            </summary>
            <value>
            An <see cref="T:C1.Win.TouchToolKit.AlternativeContentSettings"/> type value that indicates how to display zoom factor when gesture zooming.
            </value>
            <remarks>
            This setting only take effect when <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomPreviewMode"/> property value is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent">ZoomPreviewMode.AlternativeContent</see>.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class. 
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.BoundaryFeedbackMode">
            <summary>
            Gets or sets a value indicating how to show visual feedback when scroll reach end point.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.BoundaryFeedbackMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.BoundaryFeedbackMode.Split"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class. 
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.AllowPanScroll">
            <summary>
            Gets or sets a value indicating whether allow scroll the form by pan gesture.
            </summary>
            <value>
            <see langword="true"/> if allow scroll the form by pan gesture; otherwise, <see langword="false"/>.The default is <see langword="true"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollIndicatorMode"/> property. 
            </para>
              <code lang="CS" source="C1ZoomScrollDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomScrollDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.AllowZoomByResize">
            <summary>
            Gets or sets a value that indicates whether zoom form when resizing form.
            </summary>
            <value>
            <see langword="true"/> to zoom form when resizing form; otherwise, <see langword="false"/>. The default is <see langword="true"/>.
            </value>
            <remarks>
            <para>
            Even though <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowZoomByResize">C1Zoom.AllowZoomByResize</see> is <see langword="true"/>, zooming form's content by resizing form will not work in these situations:
            </para>
            <para>
            <see cref="P:C1.Win.TouchToolKit.C1Zoom.InnerPanelLayoutMode">C1Zoom.InnerPanelLayoutMode</see> is <see cref="F:C1.Win.TouchToolKit.InnerPanelLayoutMode.None"/>.
            </para>
            <para>
            The ownerForm's <see cref="P:System.Windows.Forms.Form.IsMdiContainer"/> is <see langword="true"/>. 
            </para>
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.AllowResizeByZoom">
            <summary>
            Gets or sets a value that indicates whether resize form when zooming form.
            </summary>
            <value>
            <see langword="true"/> to resize form when zooming form; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <remarks>
            <para>
            Even though <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowResizeByZoom">C1Zoom.AllowResizeByZoom</see> is <see langword="true"/>, resizing form by zooming form will not work in these situations:
            </para>
            <para>
            <see cref="P:C1.Win.TouchToolKit.C1Zoom.InnerPanelLayoutMode">C1Zoom.InnerPanelLayoutMode</see> is <see cref="F:C1.Win.TouchToolKit.InnerPanelLayoutMode.None"/>.
            </para>        
            <para>
            <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomPreviewMode">C1Zoom.ZoomPreviewMode</see> is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.NoPreview"/>. 
            </para>
            <para>
             Pinch zoom when <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomPreviewMode">C1Zoom.ZoomPreviewMode</see> is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent"/>. 
            </para>
            <para>
             Set <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomFactor">C1Zoom.ZoomFactor</see> by <see cref="M:C1.Win.TouchToolKit.C1Zoom.SetZoomFactor(System.Single,System.Boolean)">C1Zoom.SetZoomFactor(float,false)</see>.
            </para>
            <para>
             The ownerForm's <see cref="P:System.Windows.Forms.Form.IsMdiContainer"/> is <see langword="true"/>. 
            </para>
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.ScrollIndicatorMode">
            <summary>
            Gets or sets a value indicating which mode to indicate current scroll location.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.ScrollIndicatorMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.ScrollIndicatorMode.ScrollIndicator"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollIndicatorMode"/> property. 
            </para>
              <code lang="CS" source="C1ZoomScrollDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomScrollDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.IsHorizontalRailEnabled">
            <summary>
            Gets or sets a value that indicates whether the scroll rail is enabled for the horizontal axis.
            </summary>
            <value>
            <see langword="true"/> to enable the horizontal scroll rail; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.IsVerticalRailEnabled">
            <summary>
            Gets or sets a value that indicates whether the scroll rail is enabled for the vertical axis.
            </summary>
            <value>
            <see langword="true"/> to enable the vertical scroll rail; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.AutoShowControl">
            <summary>
            Gets or sets a value that indicates whether the control auto show when get focus or touch keyboard popup.
            </summary>
            <value>
            <see langword="true"/> to auto show control; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.KeepAspectRatio">
            <summary>
              Gets or sets a value indicating whether to keep aspect ratio when resize the form.
            </summary>
            <value>
            <see langword="true"/> if keep aspect ratio when resize the form; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to enable/disable the keep aspect ration when resize the form.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.FullScreenMode">
            <summary>
            Gets or sets the full screen mode used by owner form.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.FullScreenMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.FullScreenMode.None"/>.
            </value>
            <exception cref="T:System.InvalidOperationException">
              Can't change FullScreenMode if owner Form's IsMdiChild is true.
            </exception>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_006"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_006"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.BackColor">
            <summary>
            Gets or sets the background color of blank areas in Form when to zoom and scroll.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value that represents the background color of blank areas in Form when to zoom and scroll.
            The default is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>, means use the BackColor of Form.
            </value>
            <remarks>
            The BackColor property does not support transparent colors.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
              <code lang="CS" source="C1ZoomBackColorDemo.cs" region="ID_C1ZoomBackColorDemo"/>
              <code lang="VB" source="C1ZoomBackColorDemo.vb" region="ID_C1ZoomBackColorDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.BackgroundImage">
            <summary>
            Gets or sets the background image displayed in the blank areas of Form when to zoom and scroll.
            </summary>
            <value>
            An <see cref="T:System.Drawing.Image"/> value that represents the image to display in the blank areas of Form when to zoom and scroll.
            The default is <see langword="null"/>.
            </value>
            <remarks>
            Images with translucent or transparent colors are not supported by Windows Forms controls as background images.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.BackColor"/> property. 
            </para>
              <code lang="CS" source="C1ZoomBackColorDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomBackColorDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout"/> enumeration.
            </summary>
            <value>
            One of the values of <see cref="T:System.Windows.Forms.ImageLayout"/> (<see cref="F:System.Windows.Forms.ImageLayout.Center"/> , <see cref="F:System.Windows.Forms.ImageLayout.None"/>, <see cref="F:System.Windows.Forms.ImageLayout.Stretch"/>, <see cref="F:System.Windows.Forms.ImageLayout.Tile"/>, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom"/>). <see cref="F:System.Windows.Forms.ImageLayout.Tile"/> is the default value.
            </value>
            <remarks>
            <para>
            Use the BackgroundImageLayout property to specify the position and behavior of an image you have placed onto the blank areas of Form when to zoom and scroll. BackgroundImageLayout takes effect only if the <see cref="P:C1.Win.TouchToolKit.C1ApplicationZoom.BackgroundImage"/> property is set.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.BackColor"/> property. 
            </para>
              <code lang="CS" source="C1ZoomBackColorDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomBackColorDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.ControlBars">
            <summary>
            Gets the collection of <see cref="T:C1.Win.TouchToolKit.ControlBar"/> contained within the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
            </summary>
            <value>
            A <see cref="T:C1.Win.TouchToolKit.ControlBar"/> value list that representing the collection of <see cref="T:C1.Win.TouchToolKit.ControlBar"/> contained within the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_ControlBarDemo"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_ControlBarDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.ZoomPolicies">
            <summary>
            Gets the custom zoom policies. <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> will look for zoom policies in this
            list.
            </summary>
            <value>
            A list of custom <see cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="DataGridViewZoomPolicyDemo.cs" region="ID_001"/>
              <code lang="VB" source="DataGridViewZoomPolicyDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.DefaultZoomPolicies">
            <summary>
            Gets the default zoom policies.
            </summary>
            <value>
            The default zoom policies.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="DataGridViewZoomPolicyDemo.cs" region="ID_003"/>
              <code lang="VB" source="DataGridViewZoomPolicyDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ApplicationZoom.InnerPanelLayoutMode">
            <summary>
             Gets or sets the layout mode of InnerPanel.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.InnerPanelLayoutMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.InnerPanelLayoutMode.None"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomAttaching">
            <summary>
            Occurs when the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component is preparing attach to a <see cref="T:System.Windows.Forms.Form"/>.
            </summary>
            <remarks>
            <para>
            You can change the initial settings of <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component in this event's event handler.
            </para>
            <para>
            You can cancel current attaching operation by set <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.Cancel">C1ZoomAttachingEventArgs.Cancel</see>
            property to <see langword="true"/>.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomAttached">
            <summary>
            Occurs when the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component has attached to a <see cref="T:System.Windows.Forms.Form"/>.
            </summary>
            <remarks>
            <para>
            You can change the initial settings of <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component in this event's event handler.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomDetached">
            <summary>
            Occurs when the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component has detached from a <see cref="T:System.Windows.Forms.Form"/>.
            </summary>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomAttaching"/> event of <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs"/> class.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.#ctor(C1.Win.TouchToolKit.C1Zoom,System.Windows.Forms.Form)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs"/> class.
            </summary>
            <param name="c1Zoom">The <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.C1Zoom"/> component that preparing attach to the <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.Form"/>.</param>
            <param name="form">The <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.C1Zoom"/> component that preparing attach to the <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.Form"/>.</param>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.C1Zoom">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component that is preparing attach to the <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.Form"/>.
            </summary>
            <value>
            The <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component that preparing attach to the <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.Form"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.Form">
            <summary>
            Gets the <see cref="T:System.Windows.Forms.Form"/> that is preparing be attached by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component.
            </summary>
            <value>
            The <see cref="T:System.Windows.Forms.Form"/> that is preparing be attached by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomAttachingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomAttaching"/> event is cancel.
            </summary>
            <value>
            <see langword="true"/> if current attached operation is canceled; otherwise, <see langword="false"/>.
            </value>
            <remarks>
              In most cases, this property's default value is false. But for some form come from the GrapeCity componenet assembly, 
              default value is true. Some form, which is for License, default value is true. If you want to attach the C1Zoom to such
              forms, try to change the cancel property to false.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomAttached"/> event of <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs"/> class.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs.#ctor(C1.Win.TouchToolKit.C1Zoom,System.Windows.Forms.Form)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs"/> class.
            </summary>
            <param name="c1Zoom">The <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs.C1Zoom"/> component that has attached to the <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs.Form"/>.</param>
            <param name="form">The <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs.Form"/> that has been attached by <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs.C1Zoom"/> component.</param>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs.C1Zoom">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component that has attached to the <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs.Form"/>.
            </summary>
            <value>
            The <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component that has attached to the <see cref="P:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs.Form"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomAttachedEventArgs.Form">
            <summary>
            Gets the <see cref="T:System.Windows.Forms.Form"/> that has been attached by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component.
            </summary>
            <value>
            The <see cref="T:System.Windows.Forms.Form"/> that has been attached by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1ApplicationZoom.C1ZoomDetached"/> event of <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs"/> class.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs.#ctor(C1.Win.TouchToolKit.C1Zoom,System.Windows.Forms.Form)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs"/> class.
            </summary>
            <param name="c1Zoom">The <see cref="P:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs.C1Zoom"/> component that has detached to the <see cref="P:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs.Form"/>.</param>
            <param name="form">The <see cref="P:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs.Form"/> that has been detached by <see cref="P:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs.C1Zoom"/> component.</param>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs.C1Zoom">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component that has detached to the <see cref="P:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs.Form"/>.
            </summary>
            <value>
            The <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component that has detached to the <see cref="P:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs.Form"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomDetachedEventArgs.Form">
            <summary>
            Gets the <see cref="T:System.Windows.Forms.Form"/> that has been detached by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component.
            </summary>
            <value>
            The <see cref="T:System.Windows.Forms.Form"/> that has been detached by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ApplicationZoom"/> class.
            </para>
              <code lang="CS" source="C1ApplicationZoomDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ApplicationZoomDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.BaseUIDropEditor">
            <summary>
              Provides the base infrastructure so that user interface
              type editors can be programmeds easily.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.BaseUIDropEditor._UIEditor">
            <summary>
              Place holder for the UI Component being used.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.BaseUIDropEditor._instance">
            <summary>
            the editor attribute owner instance.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.BaseUIDropEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
              Edits the value of the specified object using the specified 
              service provider and context.
            </summary>
            <param name="context">
              An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to 
              gain additional context information. 
            </param>
            <param name="provider">
              An <see cref="T:System.IServiceProvider"/> through which editing services 
              may be obtained.
            </param>
            <param name="value">
              An instance of the value being edited.
            </param>
            <returns>
              The new value of the object. If the value of the object hasn't 
              changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.BaseUIDropEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
              Gets the editor style used by the <see cref="M:C1.Win.TouchToolKit.BaseUIDropEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">
              An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain 
              additional context information. 
            </param>
            <returns>
              One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> values indicating 
              the provided editing style. If the method is not supported, this 
              method will return <b>None</b>.
            </returns>
        </member>
        <member name="P:C1.Win.TouchToolKit.BaseUIDropEditor.Editor">
            <summary>
              Gets the <see cref="T:System.Type"/> of the UI component used in
              the UITypeEditor.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.ControlUI">
            <summary>
              A base class that will become the base for all UI editing
              managed through UI type editors.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ControlUI._editorService">
            <summary>
              Editor service that is provided by the "PropertyGrid".
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ControlUI._value">
            <summary>
              Place holder for the Value property.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.ControlUI.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
              Starts up the component that handles the UI portion
              for the provided "Type".
            </summary>
            <param name="editorService">
              An <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService"/> instance that
              invoked this UI type editor.
            </param>
            <param name="context">
              An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to 
              gain additional context information. 
            </param>
            <param name="value">
              A value that the property currently holds.
            </param>
        </member>
        <member name="M:C1.Win.TouchToolKit.ControlUI.End">
            <summary>
              Terminates the component that handles the UI portion
              for the provided "Type".
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.ControlUI.TearDown">
            <summary>
              Closes the dropped down window that is now open.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlUI.Value">
            <summary>
              Gets the value chosen through the UI type editors.
            </summary>
            <value>
              An object value of any type.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ControlBar">
            <summary>
            Represents a floating, translucent window for owner form. User can add any controls to the window.
            </summary>
            <example>
            <para>
              The following code example shows how to use the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_ControlBarDemo"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_ControlBarDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.ControlBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.ControlBar.Dispose">
            <summary>
            Releases the unmanaged resources.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBar.PositionMode">
            <summary>
            Gets or sets the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window position mode.
            </summary>
            <value>
            One of the <see cref="T:C1.Win.TouchToolKit.PositionMode"/> values. 
            The default is <see cref="F:C1.Win.TouchToolKit.PositionMode.Dock">C1.Win.TouchToolKit.PositionMode.Dock</see>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_001"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBar.DockPosition">
            <summary>
            Gets or sets a value indicating the alignment of the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window.
            </summary>
            <value>
            One of the <see cref="T:System.Drawing.ContentAlignment"/> values. 
            The default is <see cref="F:System.Drawing.ContentAlignment.MiddleLeft">ContentAlignment.MiddleLeft</see>.
            </value>
            <remarks>
            This property only take effect when <see cref="P:C1.Win.TouchToolKit.ControlBar.PositionMode"/> property value
            is <see cref="F:C1.Win.TouchToolKit.PositionMode.Dock">C1.Win.TouchToolKit.PositionMode.Dock</see>.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_001"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBar.Margin">
            <summary>
            Gets or sets a value indicating the outer margin of a <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window relative the
            owner form client coordinates.
            </summary>
            <value>
            A <see cref="T:System.Windows.Forms.Padding"/> value that represents the outer margin of the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window in pixels. The default is 0.
            </value>
            <remarks>
            <para>
            This property only take effect when <see cref="P:C1.Win.TouchToolKit.ControlBar.PositionMode"/> property value
            is <see cref="F:C1.Win.TouchToolKit.PositionMode.Dock">C1.Win.TouchToolKit.PositionMode.Dock</see>.
            </para>
            <para>
            Following table shows which property will take effect when <see cref="P:C1.Win.TouchToolKit.ControlBar.DockPosition"/> different.
                <list type="table">
                  <listheader>
                    <term>
                      <b>DockPosition</b>
                    </term>
                    <term>
                      <b>Margin</b>
                    </term>
                  </listheader>
                  <item>
                    <term>TopLeft</term>
                    <term>Top, Left</term>
                  </item>
                  <item>
                    <term>TopCenter</term>
                    <term>Top</term>
                  </item>
                  <item>
                    <term>TopRight</term>
                    <term>Top, Right</term>
                  </item>
                  <item>
                    <term>MiddleLeft</term>
                    <term>Left</term>
                  </item>
                  <item>
                    <term>MiddleCenter</term>
                    <term>not avaiable</term>
                  </item>
                  <item>
                    <term>MiddleRight</term>
                    <term>Right</term>
                  </item>
                  <item>
                    <term>BottomLeft</term>
                    <term>Bottom, Left</term>
                  </item>
                  <item>
                    <term>BottomCenter</term>
                    <term>Bottom</term>
                  </item>
                  <item>
                    <term>BottomRight</term>
                    <term>Bottom, Right</term>
                  </item>
                </list>
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_001"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBar.Position">
            <summary>
            Gets or sets a value that represents the upper-left corner of the owner form client coordinates.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Point"/> value that represents the location of the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window in pixels. The default is 0,0.
            </value>
            <remarks>
            This property only take effect when <see cref="P:C1.Win.TouchToolKit.ControlBar.PositionMode"/> property value
            is <see cref="F:C1.Win.TouchToolKit.PositionMode.Floating">C1.Win.TouchToolKit.PositionMode.Floating</see> or
            <see cref="F:C1.Win.TouchToolKit.PositionMode.Fixed">C1.Win.TouchToolKit.PositionMode.Fixed</see>.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_001"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBar.Opacity">
            <summary>
            Gets or sets the opacity level of the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window.
            </summary>
            <value>
            A <see cref="T:System.Double"/> value that represents the opacity percentage of the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window. 
            The default is 0.5.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_001"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBar.TransparencyKey">
            <summary>
            Gets or sets the color that will represent transparent the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value which will appear transparent when painted on the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window. 
            The default is Fuchsia.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_001"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBar.TransparentBackground">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window is transparent.
            </summary>
            <value>
            <see langword="true"/> if the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window is transparent;
            otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_001"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBar.Content">
            <summary>
            Gets or sets a value indicating the <see cref="P:C1.Win.TouchToolKit.ControlBar.UserControl"/> type object for the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window.
            </summary>
            <value>
            A <see cref="T:System.Type"/> value indicating the <see cref="P:C1.Win.TouchToolKit.ControlBar.UserControl"/> object. The default is null.
            </value>
            <exception cref="T:System.ArgumentException">
            The value should is a Type of <see cref="P:C1.Win.TouchToolKit.ControlBar.UserControl"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            The <see cref="P:C1.Win.TouchToolKit.ControlBar.UserControl"/> should has a public constructor without parameters.
            </exception>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ControlBar"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_001"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.PositionMode">
            <summary>
            Specifies the position mode of <see cref="T:C1.Win.TouchToolKit.ControlBar"/> window.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.PositionMode.Dock">
            <summary>
            Control bar will dock in the parent form. When parent form's size changed, 
            the control bar will adjust the position.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.PositionMode.Floating">
            <summary>
            User can change the ControlBar's position by code or UI drag.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.PositionMode.Fixed">
            <summary>
            User can change the ControlBar's position by code. But can't change it by UI drag.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.C1ZoomCommandProvider">
            <summary>
            Represents the component which can be attached to any existing UserControl, 
            and made all IButtonControl on current Usercontrol can be execute the <see cref="T:C1.Win.TouchToolKit.ZoomCommands"/>. 
            </summary>
            <remarks>
            <para>
            When attach <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> to current <see cref="T:System.Windows.Forms.UserControl"/>, all of IButtonControl
            control will add a smarttag, the smartag contain a <see cref="T:C1.Win.TouchToolKit.ZoomCommands"/> item.
            </para>
            <para>
            A <see cref="T:System.Windows.Forms.UserControl"/> can't attach two or more <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> component.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> component.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_ControlBarDemo"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_ControlBarDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomCommandProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomCommandProvider.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> class.
            </summary>
            <param name="container">
            An <see cref="T:System.ComponentModel.IContainer"/> representing the container of the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/>.
            </param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomCommandProvider.CanExtend(System.Object)">
            <summary>
            Specifies whether this object can provide its extender properties to the specified object.
            </summary>
            <param name="extendee">The <see cref="T:System.Object" /> to receive the extender properties.</param>
            <returns>
            <see langword="true"/> if this object can provide extender properties to the specified object; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomCommandProvider.GetZoomCommands(System.Windows.Forms.IButtonControl)">
            <summary>
             Retrieves the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> associated with the specified <see cref="T:System.Windows.Forms.IButtonControl"/> or not.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.IButtonControl"/> for which to retrieve the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/>.</param>
            <returns>
            <see cref="T:C1.Win.TouchToolKit.ZoomCommands"/> object, indicating the Build-in command.
            </returns>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_002"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomCommandProvider.SetZoomCommands(System.Windows.Forms.IButtonControl,C1.Win.TouchToolKit.ZoomCommands)">
            <summary>
            Associates <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> with the specified <see cref="T:System.Windows.Forms.IButtonControl"/>.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.IButtonControl"/> to associate the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/>.</param>
            <param name="value">if the value isn't <see cref="F:C1.Win.TouchToolKit.ZoomCommands.None">ZoomCommands.None</see> associates 
            <see cref="T:C1.Win.TouchToolKit.ZoomCommands"/> with the specified <see cref="T:System.Windows.Forms.IButtonControl"/>.</param>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_002"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomCommandProvider.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1ZoomCommandProvider.AboutBox">
            <summary>
              Shows the product information window.
            </summary>
            <remarks>
              A window which contains the product information is shown, after this method is called.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomCommandProvider.Target">
            <summary>
            Gets or sets the Target that <see cref="T:System.Windows.Forms.UserControl"/> attached to.
            </summary>
            <value>
            A <see cref="T:System.Windows.Forms.UserControl"/> type value that indicates to which control <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> attached to.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_002"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomCommandProvider.Site">
            <summary>
            Gets or sets the <see cref="T:System.ComponentModel.ISite"/> of the <see cref="T:System.ComponentModel.Component"/>.
            </summary>
            <returns>The <see cref="T:System.ComponentModel.ISite"/> associated with the <see cref="T:System.ComponentModel.Component"/>, or null if the <see cref="T:System.ComponentModel.Component"/> is not encapsulated in an <see cref="T:System.ComponentModel.IContainer"/>, the <see cref="T:System.ComponentModel.Component"/> does not have an <see cref="T:System.ComponentModel.ISite"/> associated with it, or the <see cref="T:System.ComponentModel.Component"/> is removed from its <see cref="T:System.ComponentModel.IContainer"/>.</returns>
            <exception cref="T:System.Exception">This component should only add to a UserControl</exception>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomCommandProvider.OwnerForm">
            <summary>
            Gets the form that owns this <see cref="T:C1.Win.TouchToolKit.ControlBar"/>.
            </summary>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_003"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1ZoomCommandProvider.OwnerC1Zoom">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> that owns this <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/>.
            </summary>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> class.
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_003"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.ZoomCommands">
            <summary>
            Specifies the Built-in commands of the <see cref="T:C1.Win.TouchToolKit.C1ZoomCommandProvider"/> component.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.None">
            <summary>
            Do not do any commands, default value.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.ZoomIn">
            <summary>
            ZoomIn 10% when execute this command. If current factor reach max factor, do nothing.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.ZoomOut">
            <summary>
            ZoomOut 10% when execute this command. If current factor reach max factor, do nothing.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.ResetZoom">
            <summary>
            Change zoom factor to 100%.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.ScrollLeft">
            <summary>
            Scroll Left 1/3 of form content width. If the form has scrolled to the end point, do nothing.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.ScrollRight">
            <summary>
            Scroll Right 1/3 of form content width. If the form has scrolled to the end point, do nothing.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.ScrollUp">
            <summary>
            Scroll Up 1/3 of form content height. If the form has scrolled to the end point, do nothing.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.ScrollDown">
            <summary>
            Scroll Down 1/3 of form content height. If the form has scrolled to the end point, do nothing.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.SwitchFullScreen">
            <summary>
            Change the form to full screen. If the form has been full screen, change back.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.ShowOrHidePreviewWindow">
            <summary>
            Show pan window. If the pan window has been showed, close pan window.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.SelectNextControl">
            <summary>
            Move active control to next.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomCommands.SelectPreviousControl">
            <summary>
            Move active control to previous.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ControlBarForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.ControlBarForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.ControlBarForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.FlagEnumEditor">
            <summary>
            Implementation the UITypeEditor for ClipSpecial property in Sheet.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.FlagEnumEditor.#ctor">
            <summary>
            Initialize the instance of FlagEnumEditor.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.FlagEnumEditor.Editor">
            <summary>
              Gets the <see cref="T:System.Type"/> of the UI component used in
              the UITypeEditor.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.FlagEnumEditor.FlagEnumUI">
            <summary>
              Provides the class that actually handles the implementation
              of the "ClipSpecial" UI.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.FlagEnumEditor.FlagEnumUI._listBox">
            <summary>
             The clip special list.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.FlagEnumEditor.FlagEnumUI._startValue">
            <summary>
            The started value for cache. It will used when click cancel button.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.FlagEnumEditor.FlagEnumUI._listPanel">
            <summary>
            The panel that contains list.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.FlagEnumEditor.FlagEnumUI.#ctor(C1.Win.TouchToolKit.FlagEnumEditor)">
            <summary>
            Initializes a new instance of the <see cref="T:FlagEnumUI"/> class.
            </summary>
            <param name="editor">The editor.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.FlagEnumEditor.FlagEnumUI.InitializeComponents">
            <summary>
              Initializes all the components that are place within the
              parent control.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.FlagEnumEditor.FlagEnumUI.InitializeListItems(System.Object)">
            <summary>
            Initialize the tree view.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.FlagEnumEditor.FlagEnumUI.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
              Initializes the "AttachAlignmentUI" component as it's
              initial state.
            </summary>
            <param name="editorService">
              An <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService"/> instance that
              invoked this UI type editor.
            </param>
            <param name="context">
              An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to 
              gain additional context information. 
            </param>
            <param name="value">
              A value that the property currently holds.
            </param>
        </member>
        <member name="M:C1.Win.TouchToolKit.FlagEnumEditor.FlagEnumUI.CheckListItems(System.Int32)">
            <summary>
            Check the list check box as specified ClipSpecial.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:C1.Win.TouchToolKit.C1Zoom">
            <summary>
            Represents the component which can be attached to any existing form, and made the form can be zoom by two finger touch. 
            </summary>
            <remarks>
            <para>
            When form load, C1Zoom will change all form's children control to a inner panel. So after form loaded, you can't 
            access children controls by Form.Controls property. You should use C1Zoom.Controls property instead.
            </para>
            <para>
            If the form contains a <see cref="T:C1.Win.TouchToolKit.C1ZoomPanel"/>, <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> can't attach to the form.
            </para>
            <para>
            A form can't attach two or more C1Zoom component.
            </para>
            <para>
            The <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> can't change the tooltip, contextMenu, common dialog's font and size.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to configure <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component to get different zoom effect. 
            </para>
            <para>
              You can copy the code to a exsit Windows Forms appliction. And set the form in the sample code as start form. 
            </para>
            <para>
              If you find a licenses error when run this code. Try to drag a <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component to a 
              any Form from tool box can generate the licenses information to this project.
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_C1ZoomDemo"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_C1ZoomDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class with the specified container.
            </summary>
            <param name="container">
            An <see cref="T:System.ComponentModel.IContainer"/> representing the container of the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
            </param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.ShowPanWindow">
            <summary>
            Shows the pan window.
            </summary>
            <returns>A <see cref="T:System.Windows.Forms.Form"/> value that represents the pan window.</returns>
            <remarks>
            <para>
            Pan window will show only when the owner form is loaded, and when the owner form is closed, pan window will be closed too.
            </para>
            <para>
            If pan window has been shown to call this method will do nothing.
            </para>
            <para>
            Pan window will move as the owner form move if it is showed by this method.
            </para>
            <para>
            Pan window's <see cref="P:System.Windows.Forms.Form.StartPosition"/> is <see cref="F:System.Windows.Forms.FormStartPosition.Manual"/>,
            and its <see cref="P:System.Windows.Forms.Form.Size"/> and <see cref="P:System.Windows.Forms.Form.Location"/> depends on owner form if the pan window is showed by this method.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
              <code lang="CS" source="PanWindowDemo.cs" region="ID_PanWindowDemo"/>
              <code lang="VB" source="PanWindowDemo.vb" region="ID_PanWindowDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.ShowPanWindow(System.Windows.Forms.FormStartPosition)">
            <summary>
            Shows the pan window with the specified start position.
            </summary>
            <param name="startPosition">The start position of pan window.</param>
            <returns>A <see cref="T:System.Windows.Forms.Form"/> value that represents the pan window.</returns>
            <remarks>
            <para>
            Pan window will show only when the owner form is loaded, and when the owner form is closed, pan window will be closed too.
            </para>
            <para>
            If pan window has been shown to call this method will do nothing.
            </para>
            <para>
            Pan window will not move as the owner form move if it is showed by this method.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="M:C1.Win.TouchToolKit.C1Zoom.ShowPanWindow"/> method. 
            </para>
              <code lang="CS" source="PanWindowDemo.cs" region="ID_001"/>
              <code lang="VB" source="PanWindowDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.ShowPanWindow(System.Windows.Forms.FormStartPosition,System.Drawing.Size)">
            <summary>
            Shows the pan window with the specified start position and size.
            </summary>
            <param name="startPosition">The start position of pan window.</param>
            <param name="size">The size of pan window.</param>
            <returns>A <see cref="T:System.Windows.Forms.Form"/> value that represents the pan window.</returns>
            <remarks>
            <para>
            Pan window will show only when the owner form is loaded, and when the owner form is closed, pan window will be closed too.
            </para>
            <para>
            If pan window has been shown to call this method will do nothing.
            </para>
            <para>
            Pan window will not move as the owner form move if it is showed by this method.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="M:C1.Win.TouchToolKit.C1Zoom.ShowPanWindow"/> method. 
            </para>
              <code lang="CS" source="PanWindowDemo.cs" region="ID_001"/>
              <code lang="VB" source="PanWindowDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.ShowPanWindow(System.Drawing.Point)">
            <summary>
            Shows the pan window with the specified location.
            </summary>
            <param name="location">The location of pan window.</param>
            <returns>A <see cref="T:System.Windows.Forms.Form"/> value that represents the pan window.</returns>
            <remarks>
            <para>
            Pan window will show only when the owner form is loaded, and when the owner form is closed, pan window will be closed too.
            </para>
            <para>
            If pan window has been shown to call this method will do nothing.
            </para>
            <para>
            Pan window will not move as the owner form move if it is showed by this method.
            </para>
            <para>
            Pan window's <see cref="P:System.Windows.Forms.Form.StartPosition"/> is <see cref="F:System.Windows.Forms.FormStartPosition.Manual"/> if it is showed by this method.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="M:C1.Win.TouchToolKit.C1Zoom.ShowPanWindow"/> method. 
            </para>
              <code lang="CS" source="PanWindowDemo.cs" region="ID_001"/>
              <code lang="VB" source="PanWindowDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.ShowPanWindow(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Shows the pan window with the specified location and size.
            </summary>
            <param name="location">The location of pan window.</param>
            <param name="size">The size of pan window.</param>
            <returns>A <see cref="T:System.Windows.Forms.Form"/> value that represents the pan window.</returns>
            <remarks>
            <para>
            Pan window will show only when the owner form is loaded, and when the owner form is closed, pan window will be closed too.
            </para>
            <para>
            If pan window has been shown to call this method will do nothing.
            </para>
            <para>
            Pan window will not move as the owner form move if it is showed by this method.
            </para>
            <para>
            Pan window's <see cref="P:System.Windows.Forms.Form.StartPosition"/> is <see cref="F:System.Windows.Forms.FormStartPosition.Manual"/> if it is showed by this method.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="M:C1.Win.TouchToolKit.C1Zoom.ShowPanWindow"/> method. 
            </para>
              <code lang="CS" source="PanWindowDemo.cs" region="ID_001"/>
              <code lang="VB" source="PanWindowDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.ClosePanWindow">
            <summary>
            Closes the pan window.
            </summary>
            <remarks>
            <para>
            If pan window has been closed to call this method will do nothing.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="M:C1.Win.TouchToolKit.C1Zoom.ShowPanWindow"/> method. 
            </para>
              <code lang="CS" source="PanWindowDemo.cs" region="ID_003"/>
              <code lang="VB" source="PanWindowDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.GetDisplayRectangle(System.Windows.Forms.Control)">
            <summary>
            Get control visibility rectangle.
            </summary>
            <param name="control">The target control</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> value that represents the control visibility area.</returns>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_007"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_007"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.SetZoomFactor(System.Single,System.Boolean)">
            <summary>
            Sets the <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomFactor"/> and determines whether use animation when change <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomFactor"/>.
            </summary>
            <param name="zoomFactor">The new zoom factor.</param>
            <param name="useAnimation">true to use animation; otherwise, false.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The assigned value is greater than <see cref="P:C1.Win.TouchToolKit.C1Zoom.MaxZoomFactor"/> or less than 1.
            </exception>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.AnimationStartingEventArgs"/> class.
            </para>
              <code lang="CS" source="C1ZoomAnimationDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomAnimationDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.SetScrollLocation(System.Drawing.Point,System.Boolean)">
            <summary>
            Sets the <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollLocation"/> and determines whether use animation when change <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollLocation"/>.
            </summary>
            <param name="scrollLocation">The scroll location.</param>
            <param name="useAnimation">true to use animation; otherwise, false.</param>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.AnimationStartingEventArgs"/> class.
            </para>
              <code lang="CS" source="C1ZoomAnimationDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomAnimationDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.BeginAddControls">
            <summary>
            Call this method before change child control collection.
            </summary>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.EndAddControls">
            <summary>
            Call this method after change child control collection.
            </summary>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.AboutBox">
            <summary>
              Shows the product information window.
            </summary>
            <remarks>
              A window which contains the product information is shown, after this method is called.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.OnZoomFactorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.OnControlBoundsZooming(C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ControlBoundsZooming"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.OnControlFontZooming(C1.Win.TouchToolKit.ControlFontZoomingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ControlFontZooming"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ControlFontZoomingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.OnManipulationStarting(C1.Win.TouchToolKit.ZoomManipulationStartingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ManipulationStarting"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ZoomManipulationStartingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.OnControlAutoShowing(C1.Win.TouchToolKit.ControlAutoShowingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ControlAutoShowing"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ControlAutoShowingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.OnAnimationStarting(C1.Win.TouchToolKit.AnimationStartingEventArgs)">
            <summary>
            Raises the <see cref="E:AnimationStarting"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.AnimationStartingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1Zoom.OnAnimationCompleted(System.EventArgs)">
            <summary>
            Raises the <see cref="E:AnimationCompleted"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.Target">
            <summary>
            Gets or sets the Target that <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> attached to.
            </summary>
            <value>
            A <see cref="T:System.Windows.Forms.Form"/> type value that indicates to which control <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> attached to.
            </value>
            <exception cref="T:System.InvalidOperationException">
            <para>
            A form can't attach two or more C1Zoom component.
            </para>
            <para>
            -or-
            </para>
            <para>
            Can't use C1Zoom and C1ZoomPanel together.
            </para>
            </exception>
            <example>
            <para>
              The following code example shows how to attach a C1Zoom component to a Form by Target property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class.
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.ZoomTargets">
            <summary>
            Gets the collection of controls that can receive the zoom gesture message.
            </summary>
            <value>
            An collection of controls that can receive the zoom gesture message.
            </value>
            <remarks>
            If user do zoom gesture on controls of this collection, <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> will do nothing.
            </remarks>
            <example>
            <para>
              The following code example shows how use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_006"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_006"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.Site">
            <summary>
            Gets or sets the <see cref="T:System.ComponentModel.ISite"/> of the <see cref="T:System.ComponentModel.Component"/>.
            </summary>
            <returns>The <see cref="T:System.ComponentModel.ISite"/> associated with the <see cref="T:System.ComponentModel.Component"/>, or null if the <see cref="T:System.ComponentModel.Component"/> is not encapsulated in an <see cref="T:System.ComponentModel.IContainer"/>, the <see cref="T:System.ComponentModel.Component"/> does not have an <see cref="T:System.ComponentModel.ISite"/> associated with it, or the <see cref="T:System.ComponentModel.Component"/> is removed from its <see cref="T:System.ComponentModel.IContainer"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            <para>
            This component should only add to a Form.
            </para>
            <para>
            -or-
            </para>
            <para>
            A form can't attach two or more C1Zoom component.
            </para>
            <para>
            -or-
            </para>
            <para>
            Can't use C1Zoom and C1ZoomPanel together.
            </para>
            </exception>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.ZoomPreviewMode">
            <summary>
            Gets or sets a value indicating how to preview the form when gesture zooming.
            </summary>
            <value>
            One of the <see cref="T:C1.Win.TouchToolKit.ZoomPreviewMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.Bitmap">ZoomPreviewMode.Bitmap</see>
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class. 
              Run the sample code, select the different value of ZoomPreviewMode ComboBox. Try to zoom and pan by touch to check the difference of different ZoomPreviewMode.
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.AlternativeContentSettings">
            <summary>
            Gets the settings indicating how to display zoom factor when gesture zooming.
            </summary>
            <value>
            An <see cref="T:C1.Win.TouchToolKit.AlternativeContentSettings"/> type value that indicates how to display zoom factor when gesture zooming.
            </value>
            <remarks>
            This setting only take effect when <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomPreviewMode"/> property value is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent">ZoomPreviewMode.AlternativeContent</see>.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class. 
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom">
            <summary>
            Gets or sets a value indicating whether the form can perform gesture zoom.
            </summary>
            <value>
            <see langword="true"/> if the form can perform gesture zoom; otherwise, <see langword="false"/>. The default is <see langword="true"/>.
            </value>
            <example>
            <para>
              The following code example shows how to enable/disable the gesture zoom.
            </para>
              <code lang = "CS" source="C1ZoomMiscDemo.cs" region = "ID_C1ZoomMiscDemo"/>
              <code lang = "VB" source="C1ZoomMiscDemo.vb" region = "ID_C1ZoomMiscDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.MaxZoomFactor">
            <summary>
            Gets or sets the maximum zoom factor of the form.
            </summary>
            <value>
            A <see cref="T:System.Single"/> value that represents the maximum zoom factor of the form. The default is 4f.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value less than <b>1f</b> or more than <b>4f</b>.
            </exception>
            <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomFactor"/>
            <example>
            <para>
              The following code example shows how to set the maxmum value of zoom factor.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class.
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.KeepAspectRatio">
            <summary>
              Gets or sets a value indicating whether to keep aspect ratio when resize the form.
            </summary>
            <value>
            <see langword="true"/> if keep aspect ratio when resize the form; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to enable/disable the keep aspect ration when resize the form.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.ZoomSnapPoints">
            <summary>
            Gets a group of zoom factor, when zoom ending, the result zoom factor will try to snap to a zoom factor in this group.
            </summary>
            <value>
            A <see cref="T:System.Single"/> value list that represents a group of zoom factor, when zoom ending, the result zoom factor will try to snap to a zoom factor in this group.
            </value>
            <remarks>
            This property only take effect when <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomPreviewMode"/> property value is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.Bitmap">ZoomPreviewMode.Bitmap</see> and <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent">ZoomPreviewMode.AlternativeContent</see>.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
              <code lang="CS" source="C1ZoomSnapPointDemo.cs" region="ID_C1ZoomSnapPointDemo"/>
              <code lang="VB" source="C1ZoomSnapPointDemo.vb" region="ID_C1ZoomSnapPointDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.ZoomSnapDistance">
            <summary>
            Gets or sets a value indicate the minimum distance that can cause current zoom factor snap to a zoom factor in <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomSnapPoints"/>.
            </summary>
            <value>
            A <see cref="T:System.Single"/> value that represents the minimum distance that can cause current zoom factor snap to a zoom factor in <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomSnapPoints"/>.
            </value>
            <remarks>
            This property only take effect when <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomPreviewMode"/> property value is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.Bitmap">ZoomPreviewMode.Bitmap</see> and <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent">ZoomPreviewMode.AlternativeContent</see>.
            </remarks>
            <seealso cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomSnapPoints"/>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
              <code lang="CS" source="C1ZoomSnapPointDemo.cs" region="ID_C1ZoomSnapPointDemo"/>
              <code lang="VB" source="C1ZoomSnapPointDemo.vb" region="ID_C1ZoomSnapPointDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.ZoomFactor">
            <summary>
              Gets or sets the zoom factor of the form.
            </summary>
            <value>
              A <see cref="T:System.Single"/> value that represents the zoom factor of the form.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The assigned value is greater than <see cref="P:C1.Win.TouchToolKit.C1Zoom.MaxZoomFactor"/> or less than 1.
            </exception>
            <remarks>
              <para>
                The <b>ZoomFactor</b>'s range is from 1 to <see cref="P:C1.Win.TouchToolKit.C1Zoom.MaxZoomFactor"/>.
              </para>
              <para>
                If the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property is <see langword="true"/> the user can change the <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomFactor"/> with gesture.
              </para>
            </remarks>
            <seealso cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class. 
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.BoundaryFeedbackMode">
            <summary>
            Gets or sets a value indicating how to show visual feedback when scroll reach end point.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.BoundaryFeedbackMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.BoundaryFeedbackMode.Split"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class. 
              Run the sample code, select the different value of BoundaryFeedbackMode ComboBox. Try to zoom and pan by touch to check the difference of different ZoomPreviewMode.
            </para>
              <code lang="CS" source="C1ZoomDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.Controls">
            <summary>
            Gets the child controls of the owner form.
            </summary>
            <value>
            The <see cref="T:System.Windows.Forms.Control.ControlCollection"/> value that represents the child controls of the owner form.
            </value>
            <remarks>
            After form loaded, <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> will change all child controls from form to a inner panel. 
            So, if a form attached to a <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>, user should use <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls">C1Zoom.Controls</see> property instead of <see cref="P:System.Windows.Forms.Control.Controls">Form.Controls</see> property.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this method.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_C1ZoomControlsDemo"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_C1ZoomControlsDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.AllowPanScroll">
            <summary>
            Gets or sets a value indicating whether allow scroll the form by pan gesture.
            </summary>
            <value>
            <see langword="true"/> if allow scroll the form by pan gesture; otherwise, <see langword="false"/>.The default is <see langword="true"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollIndicatorMode"/> property. 
            </para>
              <code lang="CS" source="C1ZoomScrollDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomScrollDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.ScrollLocation">
            <summary>
            Gets or sets the scroll location of the form.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Point"/> value that represents the scroll location of the form in pixels. 
            </value>
            <remarks>
            <para>
            The <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollLocation"/> property represents the location of the visible portion of a the form. 
            Use this property to change the portion of the control that is displayed.
            </para>
            <para>
            <note>
            The <see cref="P:System.Drawing.Point.X"/> and <see cref="P:System.Drawing.Point.Y"/> coordinate values retrieved are negative 
            if the control has scrolled away from its starting position (0,0). When you set this property, 
            you must always assign positive <see cref="P:System.Drawing.Point.X"/> and <see cref="P:System.Drawing.Point.Y"/> values to set 
            the scroll position relative to the starting position. For example, if you have a horizontal 
            scroll bar and you set x and y to 200, you move the scroll 200 pixels to the right; if you 
            then set x and y to 100, the scroll appears to jump the left by 100 pixels, because you are 
            setting it 100 pixels away from the starting position. In the first case, <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollLocation"/> 
            returns {-200, 0}; in the second case, it returns {-100,0}.
            </note>
            </para>
            <para>
            If the set value bigger than scrollable maximum value, the <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollLocation"/> will adjust the value 
            to maximum value automatically. And also, if the set value smaller than scrollable minimum value, the 
            <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollLocation"/> will adjust the value to minimum value automatically.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.ScrollIndicatorMode"/> property. 
            </para>
              <code lang="CS" source="C1ZoomScrollDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomScrollDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.ControlBars">
            <summary>
            Gets the collection of <see cref="T:C1.Win.TouchToolKit.ControlBar"/> contained within the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
            </summary>
            <value>
            A <see cref="T:C1.Win.TouchToolKit.ControlBar"/> value list that representing the collection of <see cref="T:C1.Win.TouchToolKit.ControlBar"/> contained within the <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
              <code lang="CS" source="ControlBarDemo.cs" region="ID_ControlBarDemo"/>
              <code lang="VB" source="ControlBarDemo.vb" region="ID_ControlBarDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.IsHorizontalRailEnabled">
            <summary>
            Gets or sets a value that indicates whether the scroll rail is enabled for the horizontal axis.
            </summary>
            <value>
            <see langword="true"/> to enable the horizontal scroll rail; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.IsVerticalRailEnabled">
            <summary>
            Gets or sets a value that indicates whether the scroll rail is enabled for the vertical axis.
            </summary>
            <value>
            <see langword="true"/> to enable the vertical scroll rail; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.AllowZoomByResize">
            <summary>
            Gets or sets a value that indicates whether zoom form when resizing form.
            </summary>
            <value>
            <see langword="true"/> to zoom form when resizing form; otherwise, <see langword="false"/>. The default is <see langword="true"/>.
            </value>
            <remarks>
            <para>
            Even though <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowZoomByResize"/> is <see langword="true"/>, zooming form's content by resizing form will not work in these situations:
            </para>
            <para>
            <see cref="P:C1.Win.TouchToolKit.C1Zoom.InnerPanelLayoutMode"/> is <see cref="F:C1.Win.TouchToolKit.InnerPanelLayoutMode.None"/>.
            </para>
            <para>
            The ownerForm's <see cref="P:System.Windows.Forms.Form.IsMdiContainer"/> is <see langword="true"/>. 
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_008"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_008"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.AllowResizeByZoom">
            <summary>
            Gets or sets a value that indicates whether resize form when zooming form.
            </summary>
            <value>
            <see langword="true"/> to resize form when zooming form; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <remarks>
            <para>
            Even though <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowResizeByZoom"/> is <see langword="true"/>, resizing form by zooming form will not work in these situations:
            </para>
            <para>
            <see cref="P:C1.Win.TouchToolKit.C1Zoom.InnerPanelLayoutMode"/> is <see cref="F:C1.Win.TouchToolKit.InnerPanelLayoutMode.None"/>.
            </para>        
            <para>
            <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomPreviewMode"/> is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.NoPreview"/>. 
            </para>
            <para>
             Pinch zoom when <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomPreviewMode"/> is <see cref="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent"/>. 
            </para>
            <para>
             Set <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomFactor"/> by <see cref="M:C1.Win.TouchToolKit.C1Zoom.SetZoomFactor(System.Single,System.Boolean)">SetZoomFactor(float,false)</see>.
            </para>
            <para>
             The ownerForm's <see cref="P:System.Windows.Forms.Form.IsMdiContainer"/> is <see langword="true"/>. 
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_009"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_009"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.ZoomPolicies">
            <summary>
            Gets the custom zoom policies. <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> will look for zoom policies in this
            list.
            </summary>
            <value>
            A list of custom <see cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="DataGridViewZoomPolicyDemo.cs" region="ID_001"/>
              <code lang="VB" source="DataGridViewZoomPolicyDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.DefaultZoomPolicies">
            <summary>
            Gets the default zoom policies.
            </summary>
            <value>
            The default zoom policies.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="DataGridViewZoomPolicyDemo.cs" region="ID_003"/>
              <code lang="VB" source="DataGridViewZoomPolicyDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.IsPanWindowShown">
            <summary>
            Gets a value indicating whether the pan window is shown.
            </summary>
            <value>
            <see langword="true"/> if the pan window is shown; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="M:C1.Win.TouchToolKit.C1Zoom.ShowPanWindow"/> method. 
            </para>
              <code lang="CS" source="PanWindowDemo.cs" region="ID_002"/>
              <code lang="VB" source="PanWindowDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.ScrollIndicatorMode">
            <summary>
            Gets or sets a value indicating which mode to indicate current scroll location.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.ScrollIndicatorMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.ScrollIndicatorMode.ScrollIndicator"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
              <code lang="CS" source="C1ZoomScrollDemo.cs" region="ID_C1ZoomScrollDemo"/>
              <code lang="VB" source="C1ZoomScrollDemo.vb" region="ID_C1ZoomScrollDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.AutoShowControl">
            <summary>
            Gets or sets a value that indicates whether the control auto show when get focus or touch keyboard popup.
            </summary>
            <value>
            <see langword="true"/> to auto show control; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.InnerPanel">
            <summary>
            Gets the inner panel that contains the target form's child controls.
            </summary>
            <remarks>
            The inner panel will cover the form after the C1Zoom attached to target form. 
            So the value of <see cref="P:System.Windows.Forms.Control.Capture"/> property of target form is incorrect, you should use 
            <see cref="P:System.Windows.Forms.Control.Capture"/> property of inner panel instead.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.BackColor">
            <summary>
            Gets or sets the background color of blank areas in Form when to zoom and scroll.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value that represents the background color of blank areas in Form when to zoom and scroll.
            The default is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>, means use the BackColor of Form.
            </value>
            <exception cref="T:System.ArgumentException">
              The BackColor property does not support transparent colors.
            </exception>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
              <code lang="CS" source="C1ZoomBackColorDemo.cs" region="ID_C1ZoomBackColorDemo"/>
              <code lang="VB" source="C1ZoomBackColorDemo.vb" region="ID_C1ZoomBackColorDemo"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.BackgroundImage">
            <summary>
            Gets or sets the background image displayed in the blank areas of Form when to zoom and scroll.
            </summary>
            <value>
            An <see cref="T:System.Drawing.Image"/> value that represents the image to display in the blank areas of Form when to zoom and scroll.
            The default is <see langword="null"/>.
            </value>
            <remarks>
            Images with translucent or transparent colors are not supported by Windows Forms controls as background images.
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.BackColor"/> property. 
            </para>
              <code lang="CS" source="C1ZoomBackColorDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomBackColorDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout"/> enumeration.
            </summary>
            <value>
            One of the values of <see cref="T:System.Windows.Forms.ImageLayout"/> (<see cref="F:System.Windows.Forms.ImageLayout.Center"/> , <see cref="F:System.Windows.Forms.ImageLayout.None"/>, <see cref="F:System.Windows.Forms.ImageLayout.Stretch"/>, <see cref="F:System.Windows.Forms.ImageLayout.Tile"/>, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom"/>). <see cref="F:System.Windows.Forms.ImageLayout.Tile"/> is the default value.
            </value>
            <remarks>
            <para>
            Use the BackgroundImageLayout property to specify the position and behavior of an image you have placed onto the blank areas of Form when to zoom and scroll. BackgroundImageLayout takes effect only if the <see cref="P:C1.Win.TouchToolKit.C1Zoom.BackgroundImage"/> property is set.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.BackColor"/> property. 
            </para>
              <code lang="CS" source="C1ZoomBackColorDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomBackColorDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.FullScreenMode">
            <summary>
            Gets or sets the full screen mode used by owner form.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.FullScreenMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.FullScreenMode.None"/>.
            </value>
            <exception cref="T:System.InvalidOperationException">
              Can't change FullScreenMode if owner Form's IsMdiChild is true.
            </exception>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_006"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_006"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.AllowDoubleTapZoom">
            <summary>
            Gets or sets a value indicating whether allow double tap to zoom. <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomFactor"/> will change to 2f or <see cref="P:C1.Win.TouchToolKit.C1Zoom.MaxZoomFactor"/> if it is less than 2f before double tap; otherwise, it will change to 1f.
            </summary>
            <value>
            <see langword="true"/> if allow double tap to zoom; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_007"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_007"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.AllowMouseWheelZoom">
            <summary>
            Gets or sets a value indicating whether allow zoom by control + mouse wheel.
            </summary>
            <value>
            <see langword="true"/> if user can zoom by mouse wheel; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.AllowPinchZoom"/> property.
            </para>
              <code lang="CS" source="C1ZoomMiscDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomMiscDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.AllowMouseWheelScroll">
            <summary>
            Gets or sets which types of MouseWheel scroll are possible.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1Zoom.InnerPanelLayoutMode">
            <summary>
             Gets or sets the layout of InnerPanel after enlarge form.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.InnerPanelLayoutMode"/> values. The default is <see cref="F:C1.Win.TouchToolKit.InnerPanelLayoutMode.None"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="P:C1.Win.TouchToolKit.C1Zoom.Controls"/> property.
            </para>
              <code lang="CS" source="C1ZoomControlsDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1ZoomControlsDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged">
            <summary>
             Occurs when <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomFactor"/> changed.
            </summary>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_C1ZoomEventDemo"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_C1ZoomEventDemo"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1Zoom.ControlBoundsZooming">
            <summary>
            Occurs before <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> start zoom the target control's bounds. 
            </summary>
            <remarks>
            <para>
            You can set <see cref="P:C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs.Handled"/> to avoid default logic of <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> for current control.
            </para>
            <para>
            You can set <see cref="P:C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs.ChildrenHandled"/> to avoid default logic of <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> for current control's child control.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1Zoom.ControlFontZooming">
            <summary>
            Occurs before <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> start zoom the target control's font. 
            </summary>
            <remarks>
            <para>
            You can set <see cref="P:C1.Win.TouchToolKit.ControlFontZoomingEventArgs.Handled"/> to avoid default logic of <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> for current control.
            </para>
            <para>
            You can set <see cref="P:C1.Win.TouchToolKit.ControlFontZoomingEventArgs.ChildrenHandled"/> to avoid default logic of <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> for current control's child control.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1Zoom.ManipulationStarting">
            <summary>
            Occurs when the manipulation processor is first created.
            </summary>
            <remarks>
            <para>
            This event is a routed event. The <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> must have a <see cref="T:C1.Win.TouchToolKit.ManipulationModes"/> 
            other than <see cref="F:C1.Win.TouchToolKit.ManipulationModes.None"/> to be a manipulation event source. 
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1Zoom.ControlAutoShowing">
            <summary>
            Occurs before <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> start show the target control. 
            </summary>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1Zoom.AnimationStarting">
            <summary>
            Occurs before <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> start animation.
            </summary>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.AnimationStartingEventArgs"/> class.
            </para>
              <code lang="CS" source="C1ZoomAnimationDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomAnimationDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1Zoom.AnimationCompleted">
            <summary>
            Occurs when animation is completed.
            </summary>
            <example>
            <para>
              The following code example shows how to use this event.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.AnimationStartingEventArgs"/> class.
            </para>
              <code lang="CS" source="C1ZoomAnimationDemo.cs" region="ID_006"/>
              <code lang="VB" source="C1ZoomAnimationDemo.vb" region="ID_006"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1Zoom.ControlBoundsZooming"/> event of <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs.TargetControl">
            <summary>
            Gets the target control which is preparing to zoom.
            </summary>
            <value>
            The target control which is preparing to zoom.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs.ZoomBoundsInfo">
            <summary>
            Gets the informations for current zoom action.
            </summary>
            <value>
            The informations for current zoom action.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="E:C1.Win.TouchToolKit.C1Zoom.ControlBoundsZooming"/> event is handled by user.
            </summary>
            <value>
            <see langword="true"/> if this <see cref="E:C1.Win.TouchToolKit.C1Zoom.ControlBoundsZooming"/> event is handled by user; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlBoundsZoomingEventArgs.ChildrenHandled">
            <summary>
            Gets or sets a value indicating whether the child controls' zoom logic is handled by user.
            </summary>
            <value>
            <see langword="true"/> if the child controls' zoom logic is handled by user; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.ControlFontZoomingEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1Zoom.ControlFontZooming"/> event of <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlFontZoomingEventArgs.TargetControl">
            <summary>
            Gets the target control which is preparing to zoom.
            </summary>
            <value>
            The target control which is preparing to zoom.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlFontZoomingEventArgs.ZoomFontInfo">
            <summary>
            Gets the informations for current zoom action.
            </summary>
            <value>
            The informations for current zoom action.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlFontZoomingEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="E:C1.Win.TouchToolKit.C1Zoom.ControlFontZooming"/> event is handled by user.
            </summary>
            <value>
            <see langword="true"/> if this <see cref="E:C1.Win.TouchToolKit.C1Zoom.ControlBoundsZooming"/> event is handled by user; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlFontZoomingEventArgs.ChildrenHandled">
            <summary>
            Gets or sets a value indicating whether the child controls' zoom logic is handled by user.
            </summary>
            <value>
            <see langword="true"/> if the child controls' zoom logic is handled by user; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.ControlAutoShowingEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1Zoom.ControlAutoShowing"/> event of <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlAutoShowingEventArgs.ShowingControl">
            <summary>
            Gets the target control which is preparing to show.
            </summary>
            <value>
            The target control which is preparing to show.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlAutoShowingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="E:C1.Win.TouchToolKit.C1Zoom.ControlAutoShowing">C1Zoom.ControlAutoShowing</see> event is canceled.
            </summary>
            <value>
            <see langword="true"/> if current auto show operation is canceled; otherwise, <see langword="false"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlAutoShowingEventArgs.ShowingReason">
            <summary>
            Get a value indicating control auto scroll reason. 
            </summary>
            <value>
            One of the <see cref="P:C1.Win.TouchToolKit.ControlAutoShowingEventArgs.ShowingReason"/> values. 
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.ShowingReason">
            <summary>
            Specifies the control auto scroll reason when the control is displayed .
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ShowingReason.FocusChanged">
            <summary>
            Show control when the control got focus. 
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ShowingReason.ScreenKeyboardShown">
            <summary>
            Show control when system touch keyboard popup. 
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.ZoomPreviewMode">
            <summary>
            Specifies how to display the form when gesture zooming.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomPreviewMode.Bitmap">
            <summary>
            Use bitmap preview when zooming. 
            </summary>
            <remarks>
            <para>
            <b>Benefit:</b> User can get immediately result when zooming. High performance.
            </para>
            <para>
            <b>Weakness:</b> The bitmap come from <see cref="T:System.Windows.Forms.Control"/>'s <see cref="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)"/> method, it has some limitation. For example, do not support ActiveX control.
            </para>
            <para>
            <b>Suits to:</b> Most of case.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomPreviewMode.NoPreview">
             <summary>
             Do not preview when zooming.
             </summary>
             <remarks>
             <para>
             <b>Benefit:</b> User can get immediately result when zooming. Do not have any preview limitation.
             </para>
             <para>
            <b>Weakness:</b> Performance is not good.
             </para>
             <para>
            <b>Suits to:</b> Very simple form with a few children controls.
             </para>
             </remarks>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomPreviewMode.AlternativeContent">
            <summary>
               Use the alternative content preview when zooming.  
            </summary>
            <remarks>
            <para>
            <b>Benefit:</b> Do not have any preview limitation. Performance is very good.
            </para>
            <para>
            <b>Weakness:</b> User can't get immediately result when zooming.
            </para>
            <para>
            <b>Suits to:</b> Very heavy or complex form.
            </para>
            </remarks>
        </member>
        <member name="T:C1.Win.TouchToolKit.BoundaryFeedbackMode">
            <summary>
            Specifies how to show visual feedback when scroll reach end point.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.BoundaryFeedbackMode.Standard">
            <summary>
            When scrolling reach the end point, the owner form will move a small distance and then bound back.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.BoundaryFeedbackMode.Split">
            <summary>
            When scroll reach the end point, content area will continue scroll a little, and then bound back.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.FullScreenMode">
            <summary>
            Specifies how a form window is displayed in full screen mode.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.FullScreenMode.None">
            <summary>
            Form is not full screen.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.FullScreenMode.FullScreen">
            <summary>
            Form is full screen and task bar is also invisible.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.FullScreenMode.FullScreenWithTaskBar">
            <summary>
            Form is full screen and task bar is still visible.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.MouseWheelScrollMode">
            <summary>
            Specifies which types of MouseWheel scroll.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MouseWheelScrollMode.None">
            <summary>
            No scroll by wheel
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MouseWheelScrollMode.VerticalScrollByWheel">
            <summary>
            Vertical scroll by wheel.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.MouseWheelScrollMode.HorizontalScrollByShiftWheel">
            <summary>
            Horizontal scroll by Shift+Wheel.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.ZoomManipulationModes">
            <summary>
            Specifies how a target control interprets manipulation events. 
            This enumeration is flagwise to facilitate setting multiple modes.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomManipulationModes.All">
            <summary>
            Enable all manipulation interaction modes.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomManipulationModes.None">
            <summary>
            Do not present graphic interaction with manipulation events.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomManipulationModes.Pan">
            <summary>
            Permit manipulation actions that translate the target.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ZoomManipulationModes.Zoom">
            <summary>
            Permit manipulation actions that zoom the target.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.ZoomManipulationStartingEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1Zoom.ManipulationStarting"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.ZoomManipulationStartingEventArgs.Mode">
            <summary>
            Gets or sets which types of manipulations are possible.
            </summary>
            <value>
            One of the <see cref="T:C1.Win.TouchToolKit.ManipulationModes"/> values. The default is <see cref="F:C1.Win.TouchToolKit.ManipulationModes.All"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ZoomManipulationStartingEventArgs.Position">
            <summary>
            Gets the point from which the manipulation originated.
            </summary>
            <value>
            The point from which the manipulation originated.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ZoomManipulationStartingEventArgs.TargetControl">
            <summary>
            Gets a reference to the control that raised the event.
            </summary>
            <value>
            The control that raised the event.
            </value>
            <example>
            <para>
              The following code example shows how to use this property.
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1Zoom.ZoomFactorChanged"/> event.
            </para>
              <code lang="CS" source="C1ZoomEventDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1ZoomEventDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.InnerPanelLayoutMode">
            <summary>
            Specifies content's layout in the inner panel.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.InnerPanelLayoutMode.None">
            <summary>
              The content will keep in top-left if the form's size is bigger than content size.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.InnerPanelLayoutMode.MiddleCenter">
            <summary>
              The content will keep in middle center if the form's size is bigger than content size.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.ScrollIndicatorMode">
            <summary>
             Specifies how to indicate current scroll location.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ScrollIndicatorMode.None">
            <summary>
            Use nothing to indicate current scroll location.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ScrollIndicatorMode.ScrollBar">
            <summary>
            Use a scroll bar to indicate current scroll location.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ScrollIndicatorMode.ScrollIndicator">
            <summary>
            Use a scroll indicator to indicate current scroll location.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.ZoomPolicy">
            <summary>
            Implements the base class of zoom policies.
            </summary>
            <remarks>
            <para>
            <see cref="T:C1.Win.TouchToolKit.ZoomPolicy"/> is an abstract class which
            allow user to customize zoom logic for complex control. User should inherit
            <see cref="T:C1.Win.TouchToolKit.ZoomPolicy"/> for writing special control.
            </para>
            </remarks>
            <seealso cref="E:C1.Win.TouchToolKit.C1Zoom.ControlFontZooming"/>
            <seealso cref="E:C1.Win.TouchToolKit.C1Zoom.ControlBoundsZooming"/>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.ZoomPolicy"/> class to customize zoom policy for your control. 
            </para>
            <para>
              You can copy the code to a exsit Windows Forms appliction. And set the form in the sample code as start form. 
            </para>
            <para>
              If you find a licenses error when run this code. Try to drag a <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component to a 
              any Form from tool box can generate the licenses information to this project.
            </para>
              <code lang="CS" source="UserControlZoomPolicyDemo.cs" region="ID_UserControlZoomPolicyDemo"/>
              <code lang="VB" source="UserControlZoomPolicyDemo.vb" region="ID_UserControlZoomPolicyDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomPolicy.CanZoom(System.Windows.Forms.Control)">
            <summary>
            Determines whether this instance can zoom the specified control.
            </summary>
            <param name="control">The specified control.</param>
            <returns>
              <see langword="true" /> if this instance can zoom the specified control; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomPolicy.CanZoomChildren(System.Windows.Forms.Control)">
            <summary>
            Determines whether the children controls can be zoomed.
            </summary>
            <param name="control">The specified control.</param>
            <returns>
            <see langword="true"/> if the children controls can be zoomed; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            Default logic will change the bounds of Control. If the control has other child element need to change. User can add logic in this method.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)">
            <summary>
            Zoom the control font.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos"> A <see cref="T:C1.Win.TouchToolKit.ZoomFontInfo"/> type infomation provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom font.</param>
            <remarks>
            Default logic will change the font of Control. If the control has other font need to change. User can add logic in this method.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomPolicy.Initialize(System.Windows.Forms.Control)">
            <summary>
            Initializes the control before zoom action start. 
            </summary>
            <param name="control">
            The specified control.
            </param>
            <remarks>
            <para>
             This method will be called before all control zoom. 
             In some control, the bounds/font may change when parent control changed. 
             User can cache some original bound/font in this method before parent change. 
             And use the cached value in <see cref="M:C1.Win.TouchToolKit.ZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)"/> and <see cref="M:C1.Win.TouchToolKit.ZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)"/> method. 
            </para>
             <note>
             Not all control need to handle this method.
             </note>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomPolicy.Terminate(System.Windows.Forms.Control)">
            <summary>
            Terminate the control after zoom action completely. 
            </summary>
            <param name="control">
            The specified control.
            </param>
            <remarks>
            <para>
             Clear all catches and restore other specific settings that set on the <see cref="M:C1.Win.TouchToolKit.ZoomPolicy.Initialize(System.Windows.Forms.Control)"/> method.
            </para>
             <note>
             This method will be called after all control zoomed. 
             </note>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomPolicy.ShouldSerializeValue(System.Object,System.String)">
            <summary>
            Determines a value indicating whether the value of the specified object's specified property needs to be persisted.
            </summary>
            <param name="obj">The specified object.</param>
            <param name="propertyName">Name of the specified property.</param>
            <returns>
              <see langword="true"/> if the current value of the property is different from its default value; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomPolicy.GetChildren(System.Windows.Forms.Control)">
            <summary>
            Get the collection of controls contained within the control.
            </summary>
            <param name="control">The specified control.</param>
            <remarks>
            Default logic will return the <see cref="P:System.Windows.Forms.Control.Controls"/>. 
            If the control has other child element need to change. User can add it to the collection.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.ZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ZoomPolicy.Enabled">
            <summary>
            Gets or sets a value indicating whether this policy should take effect.
            </summary>
            <value><see langword="true"/> if this instance this policy should take effect ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:C1.Win.TouchToolKit.NoZoomFontZoomPolicy">
            <summary>
            Represents a base zoom policy for controls that do not zoom the font.
            </summary>
            <remarks>
            By default, the font of control was inherited from it's parent, so the font of control
            will be changed if the font of it's parent was changed. Use this zoom policy to break
            the inherited relation and keep the font of the control.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.NoZoomFontZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)">
            <summary>
            Zoom the control font.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos"> A <see cref="T:C1.Win.TouchToolKit.ZoomFontInfo"/> type infomation provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom font.</param>
            <remarks>
            Default logic will change the font of Control. If the control has other font need to change. User can add logic in this method.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.NoZoomFontZoomPolicy.Initialize(System.Windows.Forms.Control)">
            <summary>
            Initializes the control before zoom action start. 
            </summary>
            <param name="control">
            The specified control.
            </param>
            <remarks>
            <para>
             This method will be called before all control zoom. 
             In some control, the bounds/font may change when parent control changed. 
             User can cache some original bound/font in this method before parent change. 
             And use the cached value in <see cref="M:C1.Win.TouchToolKit.ZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)"/> and <see cref="M:C1.Win.TouchToolKit.NoZoomFontZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)"/> method. 
            </para>
             <note>
             Not all control need to handle this method.
             </note>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.NoZoomFontZoomPolicy.Terminate(System.Windows.Forms.Control)">
            <summary>
            Terminate the control after zoom action completely. 
            </summary>
            <param name="control">
            The specified control.
            </param>
            <remarks>
            <para>
             Clear all catches and restore other specific settings that set on the <see cref="M:C1.Win.TouchToolKit.NoZoomFontZoomPolicy.Initialize(System.Windows.Forms.Control)"/> method.
            </para>
             <note>
             This method will be called after all control zoomed. 
             </note>
            </remarks>
        </member>
        <member name="T:C1.Win.TouchToolKit.ControlZoomPolicy">
            <summary>
            Represents a base zoom policy for controls.
            </summary>
            <remarks>
            <para>
            This zoom policy will find a public property which named "ZoomFactor" (ignore case) and its type is float or double. 
            If the property is found, try to set this property by <see cref="P:C1.Win.TouchToolKit.C1Zoom.ZoomFactor">C1Zoom.ZoomFactor</see> or <see cref="P:C1.Win.TouchToolKit.C1ZoomPanel.ZoomFactor">C1ZoomPanel.ZoomFactor</see>.
            </para>
            <para>
            If the control has the "ZoomFactor" property, this zoom policy will not do other zoom operations and <see cref="M:C1.Win.TouchToolKit.ControlZoomPolicy.CanZoomChildren(System.Windows.Forms.Control)"/> is also return <see langword="false"/>.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.ControlZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)">
            <summary>
            Zoom the control font.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomFontInfo"/> type infomation provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom font.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ControlZoomPolicy.CanZoomChildren(System.Windows.Forms.Control)">
            <summary>
            Determines whether the children controls can be zoomed.
            </summary>
            <param name="control">The specified control.</param>
            <returns>
            <see langword="true"/> if the children controls can be zoomed; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ControlZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.ControlZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ScrollableControlZoomPolicy">
            <summary>
            Represents a base zoom policy for scrollable control.
            </summary>
            <remarks>
            <para>
            This zoom policy will cache and restore the autoscroll location when zoom.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.ScrollableControlZoomPolicy.Initialize(System.Windows.Forms.Control)">
            <summary>
            Initializes the control before zoom action start.
            </summary>
            <param name="control">The specified control.</param>
            <remarks>
              <para>
            This method will be called before all control zoom.
            In some control, the bounds/font may change when parent control changed.
            User can cache some original bound/font in this method before parent change.
            And use the cached value in <see cref="M:C1.Win.TouchToolKit.ScrollableControlZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)"/> and <see cref="M:C1.Win.TouchToolKit.ScrollableControlZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)"/> method.
              </para>
              <note>
            Not all control need to handle this method.
              </note>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ScrollableControlZoomPolicy.Terminate(System.Windows.Forms.Control)">
            <summary>
            Terminates the specified control.
            </summary>
            <param name="control">The control.</param>
            <remarks>
              <para>
            Clear all catches and restore other specific settings that set on the <see cref="M:C1.Win.TouchToolKit.ScrollableControlZoomPolicy.Initialize(System.Windows.Forms.Control)"/> method.
              </para>
              <note>
            This method will be called after all control zoomed.
              </note>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ScrollableControlZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ScrollableControlZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)">
            <summary>
            Zoom the control font.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomFontInfo"/> type infomation provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom font.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.ScrollableControlZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.DataGridView"/> type control.
            </summary>
            <remarks>
            <para>
            This zoom policy will try to zoom all fonts and row height, column width.
            </para>
            <para>
            If a <see cref="T:System.Windows.Forms.DataGridView"/> has many rows or columns, change all cell's font，row's height or column's width
            many bring performance problem. Change this property value to <see langword="false"/> can solve the performance problem. 
            </para>
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/> class. 
            </para>
            <para>
              You can copy the code to a exsit Windows Forms appliction. And set the form in the sample code as start form. 
            </para>
            <para>
              If you find a licenses error when run this code. Try to drag a <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component to a 
              any Form from tool box can generate the licenses information to this project.
            </para>
              <code lang="CS" source="DataGridViewZoomPolicyDemo.cs" region="ID_DataGridViewZoomPolicyDemo"/>
              <code lang="VB" source="DataGridViewZoomPolicyDemo.vb" region="ID_DataGridViewZoomPolicyDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.DataGridViewZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)">
            <summary>
            Zoom the control font.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomFontInfo"/> type infomation provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom font.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.DataGridViewZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
        </member>
        <member name="P:C1.Win.TouchToolKit.DataGridViewZoomPolicy.ZoomCellStyleFont">
            <summary>
            Gets or sets a value indicating whether zoom cell style's font.
            </summary>
            <value>
            <see langword="true"/> if  zoom cell style's font; otherwise, <see langword="false"/>. Default is <see langword="true"/>.
            </value>
            <remarks>
            <para>
            If set this property to <see langword="true"/>, the <see cref="T:System.Windows.Forms.DataGridView"/>'s
            <see cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle"/>,
            <see cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle"/>,
            <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle"/>,
            <see cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle"/>,
            <see cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle"/>,
            <see cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle"/> properties' font property will be changed.
            And all row/column/cell's font will be changed.
            </para>
            <para>
            If you need to solve performance problem. see <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/>.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="DataGridViewZoomPolicyDemo.cs" region="ID_005"/>
              <code lang="VB" source="DataGridViewZoomPolicyDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.DataGridViewZoomPolicy.ZoomColumnWidth">
            <summary>
            Gets or sets a value indicating whether resize column's width.
            </summary>
            <value>
            <see langword="true"/> if resize column's width; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            <para>
            If you need to solve performance problem. see <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/>.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="DataGridViewZoomPolicyDemo.cs" region="ID_006"/>
              <code lang="VB" source="DataGridViewZoomPolicyDemo.vb" region="ID_006"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.DataGridViewZoomPolicy.ZoomRowHeight">
            <summary>
            Gets or sets a value indicating whether resize row's height.
            </summary>
            <value>
            <see langword="true"/> if resize row's height; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            <para>
            If you need to solve performance problem. see <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/>.
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="DataGridViewZoomPolicyDemo.cs" region="ID_007"/>
              <code lang="VB" source="DataGridViewZoomPolicyDemo.vb" region="ID_007"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.DataGridViewZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.DataGridViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="DataGridViewZoomPolicyDemo.cs" region="ID_002"/>
              <code lang="VB" source="DataGridViewZoomPolicyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.ListBoxZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.ListBox"/> type control.
            </summary>
            <remarks>
            <para>
            If <see cref="P:System.Windows.Forms.ListBox.MultiColumn"/> is <see langword="true"/> and <see cref="P:System.Windows.Forms.ListBox.ColumnWidth"/> is bigger than 0, this zoom policy will change <see cref="P:System.Windows.Forms.ListBox.ColumnWidth"/>.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <seealso cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.ListBoxZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ListBoxZoomPolicy"/>.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.ListBoxZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ComboBoxZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.ComboBox"/> type control.
            </summary>
            <remarks>
            The <see cref="T:System.Windows.Forms.ComboBox"/> will select all text when font and size change, this zoom policy is used to disable this default behavior.
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <seealso cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.ComboBoxZoomPolicy.Initialize(System.Windows.Forms.Control)">
            <summary>
            Initializes the control before zoom action start.
            </summary>
            <param name="control">The specified control.</param>
            <remarks>
              <para>
            This method will be called before all control zoom.
            In some control, the bounds/font may change when parent control changed.
            User can cache some original bound/font in this method before parent change.
            And use the cached value in <see cref="M:C1.Win.TouchToolKit.ComboBoxZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)"/> and <see cref="M:C1.Win.TouchToolKit.ComboBoxZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)"/> method.
              </para>
              <para>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ComboBoxZoomPolicy"/>.
              </para>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ComboBoxZoomPolicy.Terminate(System.Windows.Forms.Control)">
            <summary>
            Terminate the control after zoom action completely.
            </summary>
            <param name="control">The specified control.</param>
            <remarks>
              <para>
            Clear all catches and restore other specific settings that set on the <see cref="M:C1.Win.TouchToolKit.ComboBoxZoomPolicy.Initialize(System.Windows.Forms.Control)"/> method.
              </para>
              <note>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ComboBoxZoomPolicy"/>.
              </note>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ComboBoxZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ComboBoxZoomPolicy"/>.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ComboBoxZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)">
            <summary>
            Zoom the control font.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomFontInfo"/> type infomation provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom font.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ComboBoxZoomPolicy"/>.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.ComboBoxZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.TreeViewZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.TreeView"/> type control.
            </summary>
            <remarks>
            <para>
            This zoom policy will change each item's Font in <see cref="P:System.Windows.Forms.TreeView.Nodes"/>.
            </para>
            <para>
            This zoom policy will change <see cref="P:System.Windows.Forms.TreeView.Indent"/>.
            </para>
            <para>
            In order to avoid some problems, this zoom policy just use even number to change <see cref="P:System.Windows.Forms.TreeView.ItemHeight"/>. 
            For example, <see cref="P:System.Windows.Forms.TreeView.ItemHeight"/> is 10 before zoom, after zoom 150%, the <see cref="P:System.Windows.Forms.TreeView.ItemHeight"/> should be 15 original, but it is 16 actually.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <seealso cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.TreeViewZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)">
            <summary>
            Zoom the control font.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomFontInfo"/> type infomation provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom font.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.TreeViewZoomPolicy"/>.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.TreeViewZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.TreeViewZoomPolicy"/>.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.TreeViewZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ListViewZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.ListView"/> type control.
            </summary>
            <remarks>
            This zoom policy zoom the column width of <see cref="T:System.Windows.Forms.ListView"/> and change the font of all items.
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.ListViewZoomPolicy"/> class. 
            </para>
            <para>
              You can copy the code to a exsit Windows Forms appliction. And set the form in the sample code as start form. 
            </para>
            <para>
              If you find a licenses error when run this code. Try to drag a <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> component to a 
              any Form from tool box can generate the licenses information to this project.
            </para>
              <code lang="CS" source="ListViewZoomPolicyDemo.cs" region="ID_ListViewZoomPolicyDemo"/>
              <code lang="VB" source="ListViewZoomPolicyDemo.vb" region="ID_ListViewZoomPolicyDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.ListViewZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.ListViewZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)">
            <summary>
            Zoom the control font.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomFontInfo"/> type infomation provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom font.</param>
        </member>
        <member name="P:C1.Win.TouchToolKit.ListViewZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ListViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="ListViewZoomPolicyDemo.cs" region="ID_002"/>
              <code lang="VB" source="ListViewZoomPolicyDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ListViewZoomPolicy.ZoomColumnWidth">
            <summary>
            Gets or sets a value indicating whether zoom column's width.
            </summary>
            <value>
            <see langword="true"/> if zoom column's width; otherwise, <see langword="false"/>. The default is <see langword="true"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ListViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="ListViewZoomPolicyDemo.cs" region="ID_004"/>
              <code lang="VB" source="ListViewZoomPolicyDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ListViewZoomPolicy.ZoomItemFont">
            <summary>
            Gets or sets a value indicating whether zoom item's font.
            </summary>
            <value>
            <see langword="true"/> if zoom item's font; otherwise, <see langword="false"/>. The default is <see langword="true"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.ListViewZoomPolicy"/> class.
            </para>
              <code lang="CS" source="ListViewZoomPolicyDemo.cs" region="ID_005"/>
              <code lang="VB" source="ListViewZoomPolicyDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ListViewZoomPolicy.ZoomIcon">
            <summary>
            Gets or sets a value indicating whether zoom item's icon.
            </summary>
            <value>
            <see langword="true"/> if zoom item's icon; otherwise, <see langword="false"/>. The default is <see langword="true"/>.
            </value>
            <remarks>
            <para>
            This zoom policy zoom the icon of item when <see cref="T:System.Windows.Forms.ListView"/> control containes icon.
            </para>
            <para>
            When View is <see cref="F:System.Windows.Forms.View.Tile"/>, this zoom policy zoom the icon and font of item. But
            the row spacing and column spacing can't zoom.
            </para>
            </remarks>
        </member>
        <member name="T:C1.Win.TouchToolKit.MonthCalendarZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.MonthCalendar"/> type control.
            </summary>
            <remarks>
            <para>
            Because of that it is invalid to changed <see cref="T:System.Windows.Forms.MonthCalendar"/>'s font and bounds, so this zoom policy just adjust <see cref="T:System.Windows.Forms.MonthCalendar"/>'s location.
            After zoom in, <see cref="T:System.Windows.Forms.MonthCalendar"/> will move to the center of the blank space.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <seealso cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.MonthCalendarZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.MonthCalendarZoomPolicy"/>.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.MonthCalendarZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.TableLayoutPanelZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.TableLayoutPanel"/> type control.
            </summary>
            <remarks>
            <para>
            If <see cref="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles"/> has items and items' <see cref="P:System.Windows.Forms.TableLayoutStyle.SizeType"/> is <see cref="F:System.Windows.Forms.SizeType.Absolute"/>, this zoom policy will change <see cref="P:System.Windows.Forms.ColumnStyle.Width"/>.
            </para>
            <para>
            If <see cref="P:System.Windows.Forms.TableLayoutPanel.RowStyles"/> has items and items' <see cref="P:System.Windows.Forms.TableLayoutStyle.SizeType"/> is <see cref="F:System.Windows.Forms.SizeType.Absolute"/>, this zoom policy will change <see cref="P:System.Windows.Forms.RowStyle.Height"/>.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <seealso cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.TableLayoutPanelZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.TableLayoutPanelZoomPolicy"/>.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.TableLayoutPanelZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.SplitContainerZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.SplitContainer"/> type control.
            </summary>
            <remarks>
            <para>
            After zoom, <see cref="T:C1.Win.TouchToolKit.SplitContainerZoomPolicy"/> will change <see cref="P:System.Windows.Forms.SplitContainer.SplitterDistance"/> and <see cref="P:System.Windows.Forms.SplitContainer.SplitterWidth"/> except for basic changes.
            </para>
            <para>
            If <see cref="P:System.Windows.Forms.SplitContainer.FixedPanel"/> property isn't <see cref="F:System.Windows.Forms.FixedPanel.Panel1"/>, 
            <see cref="P:System.Windows.Forms.SplitContainer.FixedPanel"/> property will be set as <see cref="F:System.Windows.Forms.FixedPanel.Panel1"/> before zoom, and change back after zoom. 
            </para>
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <seealso cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.SplitContainerZoomPolicy.Initialize(System.Windows.Forms.Control)">
            <summary>
            Initializes the control before zoom action start.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:C1.Win.TouchToolKit.SplitContainerZoomPolicy.Terminate(System.Windows.Forms.Control)">
            <summary>
             Terminate the control after zoom action completely.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:C1.Win.TouchToolKit.SplitContainerZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.SplitContainerZoomPolicy"/>.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.SplitContainerZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.PictureBoxZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.PictureBox"/> type control.
            </summary>
            <remarks>
            This zoom policy will change <see cref="P:System.Windows.Forms.PictureBox.SizeMode"/> as <see cref="F:System.Windows.Forms.PictureBoxSizeMode.Zoom"/> when ZoomFactor is greater than 1 
            if <see cref="P:System.Windows.Forms.PictureBox.SizeMode"/> is <see cref="F:System.Windows.Forms.PictureBoxSizeMode.AutoSize"/>, <see cref="F:System.Windows.Forms.PictureBoxSizeMode.CenterImage"/> or <see cref="F:System.Windows.Forms.PictureBoxSizeMode.Normal"/>.
            And when ZoomFactor change as 1, the <see cref="P:System.Windows.Forms.PictureBox.SizeMode"/> will change back.
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <seealso cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.PictureBoxZoomPolicy.Initialize(System.Windows.Forms.Control)">
            <summary>
            Initializes the control before zoom action start.
            </summary>
            <param name="control">The specified control.</param>
            <remarks>
            <para>
            This method will be called before all control zoom.
            In some control, the bounds/font may change when parent control changed.
            User can cache some original bound/font in this method before parent change.
            And use the cached value in <see cref="M:C1.Win.TouchToolKit.PictureBoxZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)"/> and <see cref="M:C1.Win.TouchToolKit.PictureBoxZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)"/> method.
            </para>
            <para>
            For more information, see <see cref="T:C1.Win.TouchToolKit.PictureBoxZoomPolicy"/>.
            </para>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.PictureBoxZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)">
            <summary>
            Zoom the control font.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomFontInfo"/> type infomation provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom font.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.PictureBoxZoomPolicy"/>.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.PictureBoxZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.PictureBoxZoomPolicy"/>.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.PictureBoxZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ToolStripZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.ToolStrip"/> type control.
            </summary>
            <remarks>
            <para>
            <see cref="T:C1.Win.TouchToolKit.ToolStripZoomPolicy"/> will change <see cref="T:System.Windows.Forms.ToolStrip"/> and <see cref="P:System.Windows.Forms.ToolStrip.Items"/>'s font and bounds after zoom.
            </para>
            <para>
            For <see cref="T:System.Windows.Forms.ToolStripDropDownItem"/>, will zoom <see cref="P:System.Windows.Forms.ToolStripDropDownItem.DropDown"/> and <see cref="P:System.Windows.Forms.ToolStripDropDownItem.DropDownItems"/>. If it is <see cref="T:System.Windows.Forms.ToolStripSplitButton"/>, <see cref="P:System.Windows.Forms.ToolStripSplitButton.DropDownButtonWidth"/> will be changed too.
            For <see cref="T:System.Windows.Forms.ToolStripControlHost"/>, will zoom <see cref="P:System.Windows.Forms.ToolStripControlHost.Control"/> just like a normal control.
            For <see cref="T:System.Windows.Forms.ToolStripSeparator"/>, <see cref="T:System.Windows.Forms.ToolStripLabel"/> and <see cref="T:System.Windows.Forms.ToolStripButton"/>, just use basic zoom policy.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <seealso cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.ToolStripZoomPolicy.GetChildren(System.Windows.Forms.Control)">
            <summary>
            Get the collection of controls contained within the control.
            </summary>
            <param name="control">The specified control.</param>
            <returns>The children.</returns>
            <remarks>
            <para>
            This method will return <see cref="P:System.Windows.Forms.ToolStripDropDownItem.DropDown"/> and <see cref="P:System.Windows.Forms.ToolStripControlHost.Control"/>.
            </para>
            <para>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ToolStripZoomPolicy"/>.
            </para>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ToolStripZoomPolicy.Initialize(System.Windows.Forms.Control)">
            <summary>
            Initializes the control before zoom action start.
            </summary>
            <param name="control">The specified control.</param>
            <remarks>
              <para>
            This method will be called before all control zoom.
            In some control, the bounds/font may change when parent control changed.
            User can cache some original bound/font in this method before parent change.
            And use the cached value in <see cref="M:C1.Win.TouchToolKit.ToolStripZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)"/> and <see cref="M:C1.Win.TouchToolKit.ToolStripZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)"/> method.
              </para>
              <note>
            This method will call <see cref="M:System.Windows.Forms.Control.SuspendLayout"/> method.
              </note>
            <para>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ToolStripZoomPolicy"/>.
            </para>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ToolStripZoomPolicy.Terminate(System.Windows.Forms.Control)">
            <summary>
            Terminate the control after zoom action completely.
            </summary>
            <param name="control">The specified control.</param>
            <remarks>
              <para>
            This method will call <see cref="M:System.Windows.Forms.Control.ResumeLayout"/> method.
              </para>
              <note>
            This method will be called after all control zoomed.
              </note>
            <para>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ToolStripZoomPolicy"/>.
            </para>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ToolStripZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)">
            <summary>
            Zoom the control font.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomFontInfo"/> type information provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom font.</param>
            <remarks>
            <para>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ToolStripZoomPolicy"/>.
            </para>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.ToolStripZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            <para>
            For more information, see <see cref="T:C1.Win.TouchToolKit.ToolStripZoomPolicy"/>.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.ToolStripZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.PropertyGridZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.PropertyGrid"/> type control.
            </summary>
            <remarks>
            <see cref="M:C1.Win.TouchToolKit.PropertyGridZoomPolicy.CanZoomChildren(System.Windows.Forms.Control)"/> always returns <see langword="false"/> because of that <see cref="T:System.Windows.Forms.PropertyGrid"/> has some inner layout logic.
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <seealso cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.PropertyGridZoomPolicy.CanZoomChildren(System.Windows.Forms.Control)">
            <summary>
            Determines whether the children controls can be zoomed. It is always return <see langword="false"/> in <see cref="T:C1.Win.TouchToolKit.PropertyGridZoomPolicy"/>.
            </summary>
            <param name="control">The specified control.</param>
            <returns>
              <see langword="true"/> if the children controls can be zoomed; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            This method always returns <see langword="false"/> because of that <see cref="T:System.Windows.Forms.PropertyGrid"/> has some inner layout logic.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.PropertyGridZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.FlowLayoutPanelZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.FlowLayoutPanel"/> type control.
            </summary>
            <remarks>
            In order to keep <see cref="T:System.Windows.Forms.FlowLayoutPanel"/>'s layout after zoom, 
            this zoom policy will call <see cref="M:System.Windows.Forms.Control.SuspendLayout"/> method in <see cref="M:C1.Win.TouchToolKit.FlowLayoutPanelZoomPolicy.Initialize(System.Windows.Forms.Control)"/> method, 
            and call <see cref="M:System.Windows.Forms.Control.ResumeLayout"/> method in <see cref="M:C1.Win.TouchToolKit.FlowLayoutPanelZoomPolicy.Terminate(System.Windows.Forms.Control)"/> method.
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
            <seealso cref="T:C1.Win.TouchToolKit.ControlZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.FlowLayoutPanelZoomPolicy.Initialize(System.Windows.Forms.Control)">
            <summary>
            Initializes the control before zoom action start.
            </summary>
            <param name="control">The specified control.</param>
            <remarks>
            <para>
            This method will be called before all control zoom.
            In some control, the bounds/font may change when parent control changed.
            User can cache some original bound/font in this method before parent change.
            And use the cached value in <see cref="M:C1.Win.TouchToolKit.ControlZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)"/> and <see cref="M:C1.Win.TouchToolKit.ControlZoomPolicy.ZoomFont(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomFontInfo)"/> method.
            </para>
            <para>
            For more information, see <see cref="T:C1.Win.TouchToolKit.FlowLayoutPanelZoomPolicy"/>.
            </para>
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.FlowLayoutPanelZoomPolicy.Terminate(System.Windows.Forms.Control)">
            <summary>
            Terminate the control after zoom action completely.
            </summary>
            <param name="control">The specified control.</param>
            <remarks>
              <para>
            Clear all catches and restore other specific settings that set on the <see cref="M:C1.Win.TouchToolKit.FlowLayoutPanelZoomPolicy.Initialize(System.Windows.Forms.Control)"/> method.
              </para>
            <para>
            For more information, see <see cref="T:C1.Win.TouchToolKit.FlowLayoutPanelZoomPolicy"/>.
            </para>
              <note>
            This method will be called after all control zoomed.
              </note>
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.FlowLayoutPanelZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.TabControlZoomPolicy">
            <summary>
            Represents a zoom policy for <see cref="T:System.Windows.Forms.TabControl"/> type control.
            </summary>
            <remarks>
            The <see cref="T:C1.Win.TouchToolKit.TabControlZoomPolicy"/> will change the ItemSize of the tab control when zoom.
            </remarks>
            <seealso cref="T:C1.Win.TouchToolKit.ZoomPolicy"/>
        </member>
        <member name="M:C1.Win.TouchToolKit.TabControlZoomPolicy.ZoomBounds(System.Windows.Forms.Control,C1.Win.TouchToolKit.ZoomBoundsInfo)">
            <summary>
            Zoom the control bounds.
            </summary>
            <param name="control">The specified control.</param>
            <param name="infos">A <see cref="T:C1.Win.TouchToolKit.ZoomBoundsInfo"/> type infomation provided by
            <see cref="T:C1.Win.TouchToolKit.C1Zoom"/> to help zoom layout.</param>
            <remarks>
            For more information, see <see cref="T:C1.Win.TouchToolKit.TabControlZoomPolicy"/>.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.TabControlZoomPolicy.TargetType">
            <summary>
            Gets the type indicates which control type can use this policy.
            </summary>
            <value>
            A <see cref="T:System.Type"/> type indicates which control type can use this policy.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ZoomBoundsInfo">
            <summary>
            Represents a helper on zoom layout. Provide information about location, size.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomBoundsInfo.Zoom(System.Int32)">
            <summary>
            Zooms the specified current value.
            </summary>
            <param name="currentValue">The <see cref="T:System.Int32"/> value need to zoom.</param>
            <returns>A <see cref="T:System.Int32"/> value that represents the zoomed value.</returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomBoundsInfo.Zoom(System.Double)">
            <summary>
            Zooms the specified current value.
            </summary>
            <param name="currentValue">The double value need to zoom.</param>
            <returns>A <see cref="T:System.Double"/> value that represents the zoomed value.</returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomBoundsInfo.Zoom(System.Single)">
            <summary>
            Zooms the specified current value.
            </summary>
            <param name="currentValue">The current value.</param>
            <returns>A <see cref="T:System.Single"/> value that represents the zoomed value.</returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomBoundsInfo.Zoom(System.Drawing.RectangleF)">
            <summary>
            Zooms the specified current rectangle.
            </summary>
            <param name="currentRectangle">The current rectangle.</param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the zoomed result.</returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomBoundsInfo.Zoom(System.Drawing.Rectangle)">
            <summary>
            Zooms the specified current rectangle.
            </summary>
            <param name="currentRectangle">The current rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> value that represents the zoomed result.</returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomBoundsInfo.Zoom(System.Drawing.Size)">
            <summary>
            Zooms the specified current size.
            </summary>
            <param name="currentSize">The current size.</param>
            <returns>A <see cref="T:System.Drawing.Size"/> value that represents the zoomed result.</returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomBoundsInfo.Zoom(System.Drawing.SizeF)">
            <summary>
            Zooms the specified current size.
            </summary>
            <param name="currentSize">The current size.</param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> value that represents the zoomed result.</returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomBoundsInfo.Zoom(System.Drawing.Point)">
            <summary>
            Zooms the specified current point.
            </summary>
            <param name="currentPoint">The current point.</param>
            <returns>A <see cref="T:System.Drawing.Point"/> value that represents the zoomed result.</returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomBoundsInfo.Zoom(System.Drawing.PointF)">
            <summary>
            Zooms the specified current point.
            </summary>
            <param name="currentPoint">The current point.</param>
            <returns>A <see cref="T:System.Drawing.PointF"/> value that represents the zoomed result.</returns>
        </member>
        <member name="P:C1.Win.TouchToolKit.ZoomBoundsInfo.CurrentBounds">
            <summary>
            Gets the current bounds that provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
            </summary>
            <value>
            The current bounds that provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ZoomBoundsInfo.CurrentFactor">
            <summary>
            Gets the current factor provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
            </summary>
            <value>
            The current factor provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ZoomBoundsInfo.TargetFactor">
            <summary>
            Gets the recommended factor provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
            </summary>
            <value>
            The recommended factor provided by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ZoomFontInfo">
            <summary>
            Represents a helper for resize font. Provide information on font.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.ZoomFontInfo.Zoom(System.Drawing.Font)">
            <summary>
            Scales the current font.
            </summary>
            <param name="currentFont">The current font.</param>
            <returns>A font scaled by <see cref="T:C1.Win.TouchToolKit.ZoomFontInfo"/></returns>
        </member>
        <member name="P:C1.Win.TouchToolKit.ZoomFontInfo.CurrentFontSize">
            <summary>
            Gets the current font size current control.
            </summary>
            <value>
            Current font size current control.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ZoomFontInfo.DeltaFactor">
             <summary>
             Gets the factor of current font size calculated by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
             </summary>
             <value>
            The factor of current font size calculated by <see cref="T:C1.Win.TouchToolKit.C1Zoom"/>.
             </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.ArgumentOutOfRange">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.CannotChangeParameterDuringInertia">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.IllegalPivotRadius">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.InertiaParametersUnspecified1and2">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.InertiaParametersUnspecified2">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.InertiaProcessorInvalidRadius">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.InvalidTimestamp">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.NoInertiaVelocitiesSpecified">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.OnlyProportionalExpansionSupported">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.ValueMustBeFinite">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.ValueMustBeFiniteNonNegative">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.Properties.Resources.ValueMustBeFiniteOrNaN">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="F:C1.Util.Licensing.AboutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Util.Licensing.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.ProviderInfo">
            <summary>
            <para>Provides static <see cref="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)"/> methods that 
            should be called from the constructors of licensed classes.</para>
            <para>Also provides a static <see cref="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)"/> method that can 
            be called to show the about box with product and licensing information.</para>
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>Check the <b>ShouldNag</b> property of the returned <see cref="T:C1.Util.Licensing.LicenseInfo"/> 
            to determine whether the licensed class should nag the user. This value is set
            to true in situations where a valid license was not found but a nag dialog
            could not be displayed. In these cases, the licensed class is supposed to nag
            in some other way (with a watermark for example).</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Boolean)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <param name="showNagDialog">Whether the nag dialog should be displayed when a valid license is not found.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>This overload was created for use in WPF. It should be called in the control's constructor
            in order to support license persistence correctly. But it should not show the nag dialog until the
            control is fully loaded, or the VS designer may remain blank.</para>
            <para>So the solution is this:</para>
            <code>
            LicenseInfo _licInfo;
            public LicensedControl()
            {
              // check license but don't nag yet
              _licInfo = ProviderInfo.Validate(typeof(LicensedControl), this, false);
              
              // perform licensing after control is fully loaded
              Loaded += LicensedControl_Loaded;
            }
            void LicensedControl_Loaded(object sender, RoutedEventArgs e)
            {
              // nag after loading
              if (_licInfo.ShouldNag)
              {
                ProviderInfo.ShowAboutBox(this);
              }
            }
            </code>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Nag(System.Type,C1.Util.Licensing.LicenseInfo,System.Boolean)">
            <summary>
            Nag user by showing AboutBox with license information.
            Show it only once per day per assembly.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="li"><see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</param>
            <param name="designTime">Whether we're running at design or run time.</param>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Reflection.Assembly,System.String)">
            <summary>
            Version of Validate used by constructors that take runtime keys.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object.</param>
            <param name="callingAsm">Assembly that contains the owner licensed control.</param>
            <param name="runtimeKey">Any valid C1 runtime key.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the runtime key.</returns>
            <remarks>
            <para>This allows a licensed C1 class to create other C1 objects bypassing 
            license verification for the child objects.</para>
            <para>For extra safety, we check that the owner object is defined in an assembly
            the contains a 'C1ProductInfo' attribute.</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateDesigntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>
            Design time validation. Looks for a license in the registry and saves it in the
            provided <see cref="T:System.ComponentModel.LicenseContext"/>.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="context"><see cref="T:System.ComponentModel.LicenseContext"/> where the runtime key will be stored.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the license.</returns>
            <remarks>
            Call this method from application-type products (that always require a license to be
            installed in the registry). In this case, the <paramref name="context"/> parameter 
            should be set to null.
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateRuntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>
            Runtime validation.
            Looks for a runtime key stored in the current application's resources.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="context"><see cref="T:System.ComponentModel.LicenseContext"/> where the runtime key will be stored.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the license.</returns>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)">
            <summary>
            Shows the About Box for an instance of a C1 product.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.GetC1Type(System.Object)">
            <summary>
            Get the type whose assembly contains a 'C1ProductInfoAttribute'.
            </summary>
            <param name="instance">Instance of an object whose type is to be checked.</param>
            <returns>The type whose assembly contains a 'C1ProductInfoAttribute'</returns>
        </member>
        <member name="T:C1.Util.Licensing.LicenseInfo">
            <summary>
            Contains information about a license stored in an application.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus,C1.Util.Licensing.ProductLicense)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Util.Licensing.LicenseInfo"/> class.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Util.Licensing.LicenseInfo"/> class.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.LicenseStatus">
            <summary>
            Gets or sets the status of this license (valid, expired, unlicensed).
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.License">
            <summary>
            Gets or sets the <see cref="T:C1.Util.Licensing.ProductLicense"/> associated with this license.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.Type">
            <summary>
            Gets or sets the <see cref="P:C1.Util.Licensing.LicenseInfo.Type"/> associated with this license.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysElapsed">
            <summary>
            Gets the number of evaluation days elapsed.
            Returns -1 for valid licenses.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysLeft">
            <summary>
            Gets the number of evaluation days still left.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.ShouldNag">
            <summary>
            Gets or sets a value that determines whether the caller should
            nag the user. This is the case when the component/control is 
            not licensed, but is not running in interactive mode. So we can't
            show a dialog and the caller is supposed to nag some other way
            (typically by adding watermarks to the UI or output).
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsValid">
            <summary>
            Gets a value that determines whether the license found is valid.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsExpired">
            <summary>
            Gets a value that determines whether the license found is expired.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsLocalHost">
            <summary>
            Gets a value that determines whether the component is running under
            localhost and therefore should not nag the user with alert dialogs.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.SafeLicenseContext">
            <summary>
            
            Provides a version of GetSavedLicenseKey that doesn't require
            special permissions.
            
            The code was mostly copied from the .NET framework, but then changed 
            in a few places to require fewer permissions (assembly name, file io, 
            etc). 
            
            The main change is the use of a custom deserializer to read Hashtable 
            objects instead of the original BinaryFormatter, which requires
            permissions.
            
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AboutNameAttribute">
            <summary>
            Attribute used to specify the product name shown on the About Box.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1ProductInfoAttribute">
            <summary>
            Attribute used to attach licensing/product information to assemblies.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.ProductLicense">
            <summary>
            Represents a license for a product (e.g. C1BarCode, C1Studio Enterprise).
            
            Provides methods for:
            - generating new license keys (administrative task)
            - checking license key validity (used by installer and products)
            - generating and checking runtime keys (used by products)
            - installing/uninstalling licenses (used by installer)
            
            The install/uninstall code requires elevated permissions, and is
            used only by setups and utilities (not by controls). The code is 
            implemented in the ProductLicense.Installer.cs, which controls should
            not include since it won't be useful to them.
            
            When a product is sold, we send the user a license KEY. The user installs
            a license on his machine by providing his name, his company name, and the 
            key.
            
            The <see cref="P:C1.Util.Licensing.ProductLicense.Key"/> is a string in the following format:
            
                AAQYYCC-XX-NNNNNN-DD-DZZZZZZ
                
            Where:
            
                AA:     Product code (should match one of the products in the 
                        product catalog (see ProductInformation.GetProductCatalog()).
                Q:      Quarter when the license key was issued (1, 2, or 3)
                YY:     Year when the license key was issued (e.g., 10 for 2010)
                CC:     Order code, two chars that indicate whether this is a 
                        new sale, upgrade, renewal, special offer, etc.
                XX:     Hash code to ensure key validity.
                NNNNNN: Unique serial number.
                DDD:    Vendor code, three chars
                ZZZZZZ: Combination of random numbers for uniqueness and extra hash.
                
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.C1TouchEventProvider">
            <summary>
            Represents the component which can be attached to any control, and provide pointer and manipulation events for the attached control. 
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> component. 
            </para>
            <para>
              You can copy the code to a exsit Windows Forms appliction. And set the form in the sample code as start form. 
            </para>
            <para>
              If you find a licenses error when run this code. Try to drag a <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> component to a 
              any Form from tool box can generate the licenses information to this project.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_C1TouchEventProviderDemo"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_C1TouchEventProviderDemo"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.CanExtend(System.Object)">
            <summary>
            Specifies whether this object can provide its extender properties to the specified object.
            </summary>
            <param name="extendee">The <see cref="T:System.Object" /> to receive the extender properties.</param>
            <returns>
            true if this object can provide extender properties to the specified object; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.GetEnableTouchEvents(System.Windows.Forms.Control)">
            <summary>
             Retrieves the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> associated with the specified control or not.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.Control"/> for which to retrieve the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/>.</param>
            <returns>
              <see langword="true"/> if the specified control will get pointer or manipulation events; otherwise, <see langword="false"/>.
            </returns>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.SetEnableTouchEvents(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Associates <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> with the specified control.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.Control"/> to associate the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/>.</param>
            <param name="value"><see langword="true"/> if associates <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> with the specified control. otherwise <see langword="false"/>.</param>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.AboutBox">
            <summary>
              Shows the product information window.
            </summary>
            <remarks>
              A window which contains the product information is shown, after this method is called.
            </remarks>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnPointerCanceled(C1.Win.TouchToolKit.PointerEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCanceled"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.PointerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnPointerCaptureLost(C1.Win.TouchToolKit.PointerEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCaptureLost"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.PointerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnPointerEntered(C1.Win.TouchToolKit.PointerEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerEntered"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.PointerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnPointerExited(C1.Win.TouchToolKit.PointerEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerExited"/> event.
            </summary>
            <remarks>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">PointerEventArgs.Handled</see>
            </remarks>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.PointerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnPointerMoved(C1.Win.TouchToolKit.PointerEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerMoved"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.PointerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnPointerPressed(C1.Win.TouchToolKit.PointerEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.PointerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnPointerReleased(C1.Win.TouchToolKit.PointerEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.PointerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnHolding(C1.Win.TouchToolKit.HoldingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.Holding"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.HoldingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnTapped(C1.Win.TouchToolKit.TappedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.Tapped"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.TappedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnDoubleTapped(C1.Win.TouchToolKit.DoubleTappedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.DoubleTapped"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.DoubleTappedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnRightTapped(C1.Win.TouchToolKit.RightTappedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.RightTapped"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.RightTappedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnManipulationStarting(C1.Win.TouchToolKit.ManipulationStartingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationStarting"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ManipulationStartingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnManipulationStarted(C1.Win.TouchToolKit.ManipulationStartedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationStarted"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ManipulationStartedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnManipulationDelta(C1.Win.TouchToolKit.ManipulationDeltaEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationDelta"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ManipulationDeltaEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnManipulationInertiaStarting(C1.Win.TouchToolKit.ManipulationInertiaStartingEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationInertiaStarting"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ManipulationInertiaStartingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnManipulationCompleted(C1.Win.TouchToolKit.ManipulationCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationCompleted"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Win.TouchToolKit.ManipulationCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1TouchEventProvider.MaximunTouches">
            <summary>
            Gets the aggregate maximum of the maximum number of contacts supported by every digitizer in the system.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> value that indicates the aggregate maximum of the maximum number of contacts supported by every digitizer in the system.
            </value>
            <remarks>
            If the system has only single-touch digitizers, the return value is 1. If the system has multi-touch digitizers, the return value is the number of simultaneous contacts the hardware can provide.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationMode">
            <summary>
            Gets or sets the <see cref="T:C1.Win.TouchToolKit.ManipulationModes"/> value used for <see cref="T:System.Windows.Forms.Control"/> behavior and interaction with gestures.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.ManipulationModes"/> values. The default is <see cref="F:C1.Win.TouchToolKit.ManipulationModes.All"/>
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1TouchEventProvider.EnablePenFlicks">
            <summary>
              Gets or sets a value indicating whether the control supports the pen flicks gesture.
            </summary>
            <value>
            <see langword="true"/> if allow the pen flicks gesture; otherwise, <see langword="false"/>.The default is <see langword="true"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.C1TouchEventProvider.EnablePressAndHold">
            <summary>
              Gets or sets a value indicating whether the control supports the press and hold (right-click) gesture.
            </summary>
            <value>
            <see langword="true"/> if allow the press and hold (right-click) gesture; otherwise, <see langword="false"/>.The default is <see langword="true"/>.
            </value>
            <example>
            <para>
              The following code example shows how to use this property. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_001"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_001"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCanceled">
            <summary>
            Occurs when a pointer that made contact abnormally loses contact.
            </summary>
            <remarks>
            <para>
            <b>Note</b>  <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCanceled"/> might fire instead of <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/>. 
            Don't rely on <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/> and <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/> events always occurring in pairs.
            To function properly, your app must listen for and handle all events that represent likely conclusions to 
            the Press action, and that includes <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCanceled"/>. Some of the reasons why you might get a <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCanceled"/> 
            occurrence are:
            </para>
            <list type="bullet">
            <item>
            User actions that change the relationship of the display area, such as changing resolution or monitor settings
            </item>
            <item>
            Input interactions such as a stylus touching the same surface as a previous touch action
            </item>
            </list>
            <para>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">PointerEventArgs.Handled</see>
            </para>
            </remarks>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/> event.
            </para>
              <code lang="CS" source="C1TouchEventProviderPointerDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1TouchEventProviderPointerDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCaptureLost">
            <summary>
            Occurs when pointer capture previously held by the specific control moves to another control or elsewhere.
            </summary>
            <remarks>
            <para>
            <b>Note</b>  <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCaptureLost"/> might fire instead of <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/>. 
            Don't rely on <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/> and <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/> events always occurring in pairs.
            To function properly, your app must listen for and handle all events that represent likely conclusions to 
            the Press action, and that includes <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCaptureLost"/>. 
            </para>
            <para>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">PointerEventArgs.Handled</see>
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/> event.
            </para>
              <code lang="CS" source="C1TouchEventProviderPointerDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1TouchEventProviderPointerDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerEntered">
            <summary>
            Occurs when a pointer enters the hit test area of the specific control.
            </summary>
            <remarks>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">PointerEventArgs.Handled</see>
            </remarks>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerExited"/>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/> event.
            </para>
              <code lang="CS" source="C1TouchEventProviderPointerDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1TouchEventProviderPointerDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerExited">
            <summary>
            Occurs when a pointer leaves the hit test area of the specific control.
            </summary>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerEntered"/>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/> event.
            </para>
              <code lang="CS" source="C1TouchEventProviderPointerDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1TouchEventProviderPointerDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerMoved">
            <summary>
            Occurs when a pointer moves while the pointer remains within the hit test area of the specific control.
            </summary>
            <remarks>
            <para>
            In some UI scenarios this event will fire a lot. 
            Be aware of the performance profile for code you put into this handler, 
            and consider ways to use your own flags or tolerances that can throttle
            how many times the logic actually needs to run.
            </para>
            <para>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">PointerEventArgs.Handled</see>
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/> event.
            </para>
              <code lang="CS" source="C1TouchEventProviderPointerDemo.cs" region="ID_007"/>
              <code lang="VB" source="C1TouchEventProviderPointerDemo.vb" region="ID_007"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed">
            <summary>
            Occurs when the pointer device initiates a Press action within the specific control.
            </summary>
            <remarks>
            <para>
            <b>Note</b>  Other events instead of PointerReleased may fire at the end of the action—for example, 
            <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCanceled"/> or <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCaptureLost"/>. Don't rely on <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/>
            and <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/> events always occurring in pairs. To function properly, your app must
            listen for and handle all events that represent likely conclusions to the Press action. Some of the
            reasons why you might not get a <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/> occurrence are:
            </para>
            <list type="bullet">
            <item>
            Differences in how specific hardware handles touch actions and Press actions
            </item>
            <item>
            User actions that change the relationship of the display area, such as changing resolution
            or monitor settings
            </item>
            <item>
            Input interactions such as a stylus touching the same surface as a previous touch action
            </item>
            </list>
            <para>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">PointerEventArgs.Handled</see>
            </para>
            </remarks>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.Tapped"/>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
              <code lang="CS" source="C1TouchEventProviderPointerDemo.cs" region="ID_C1TouchEventProviderPointerDemo"/>
              <code lang="VB" source="C1TouchEventProviderPointerDemo.vb" region="ID_C1TouchEventProviderPointerDemo"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased">
            <summary>
            Occurs when the pointer device that previously initiated a Press action is released, 
            while within the specific control. Note that the end of a Press action is not guaranteed to fire a 
            <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/> event; other events may fire instead. For more info, see Remarks.
            </summary>
            <remarks>
            <para>
            <b>Note</b>  Other events instead of <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/> may fire at the end of the 
            action—for example, <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCanceled"/> or <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerCaptureLost"/>. Don't rely 
            on <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/> and <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/> events always occurring in pairs. 
            To function properly, your app must listen for and handle all events that represent likely 
            conclusions to the Press action. Some of the reasons why you might not get a 
            <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerReleased"/> occurrence are:
            </para>
            <list type="bullet">
            <item>
            Differences in how specific hardware handles touch actions and Press actions
            </item>
            <item>
            User actions that change the relationship of the display area, such as changing resolution
            or monitor settings
            </item>
            <item>
            Input interactions such as a stylus touching the same surface as a previous touch action
            </item>
            </list>
            <para>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">PointerEventArgs.Handled</see>
            </para>
            </remarks>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.Tapped"/>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/> event.
            </para>
              <code lang="CS" source="C1TouchEventProviderPointerDemo.cs" region="ID_008"/>
              <code lang="VB" source="C1TouchEventProviderPointerDemo.vb" region="ID_008"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.Holding">
            <summary>
            Occurs when an otherwise unhandled Hold interaction occurs over the hit test area of the specific control.
            </summary>
            <remarks>
            <para>
            The <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.Tapped"/>, <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.DoubleTapped"/>, and <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.RightTapped"/> events occur 
            only after the touch point is removed. But the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.Holding"/> event occurs while the touch 
            point is still in contact. The event occurs if the touch point remains in approximately the same
            position for a period of time.
            </para>
            <para>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">HoldingEventArgs.Handled</see>
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.Tapped">
            <summary>
            Occurs when an otherwise unhandled Tap interaction occurs over the hit test area of the specific control.
            </summary>
            <remarks>
            <para>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">TappedEventArgs.Handled</see>
            </para>
            </remarks>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.DoubleTapped">
            <summary>
            Occurs when an otherwise unhandled DoubleTap interaction occurs over the hit test area of the specific control.
            </summary>
            <remarks>
            <para>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">DoubleTappedEventArgs.Handled</see>
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.RightTapped">
            <summary>
            Occurs when a right-tap input stimulus happens while the pointer is over the specific control.
            </summary>
            <remarks>
            <para>
            <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.RightTapped"/> for a touch action results from processing a <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.Tapped"/> action 
            that remains in one place for a certain amount of time. A <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.Holding"/> event from the same control
            may precede this, but <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.RightTapped"/> won't fire until the touch point is released.
            </para>
            <para>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">RightTappedEventArgs.Handled</see>
            </para>
            </remarks>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_010"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_010"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationStarting">
            <summary>
            Occurs when the manipulation processor is first created.
            </summary>
            <remarks>
            <para>
            This event is a routed event. The <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> must have a <see cref="P:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationMode"/> 
            other than <see cref="F:C1.Win.TouchToolKit.ManipulationModes.None"/> to be a manipulation event source. 
            </para>
            </remarks>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationStarted"/>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationStarted">
            <summary>
            Occurs when an input device begins a manipulation on the specific control.
            </summary>
            <remarks>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">ManipulationStartedEventArgs.Handled</see>
            </remarks>
            <seealso cref="M:C1.Win.TouchToolKit.C1TouchEventProvider.OnManipulationStarting(C1.Win.TouchToolKit.ManipulationStartingEventArgs)"/>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_006"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_006"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationDelta">
            <summary>
            Occurs when the input device changes position during a manipulation.
            </summary>
            <remarks>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">ManipulationDeltaEventArgs.Handled</see>
            </remarks>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationStarted"/>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationDelta"/>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_007"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_007"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationInertiaStarting">
            <summary>
            Occurs when the input device loses contact with the specific control during a manipulation and inertia begins.
            </summary>
            <remarks>
            <para>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">ManipulationInertiaStartingEventArgs.Handled</see>
            </para>
            </remarks>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationStarted"/>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_008"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_008"/>
            </example>
        </member>
        <member name="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationCompleted">
            <summary>
            Occurs when a manipulation on the specific control is complete.
            </summary>
            <remarks>
            <para>
            This event is a routed event. If you do not want parent control receive this event, set <see cref="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">ManipulationCompletedEventArgs.Handled</see>
            </para>
            </remarks>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationStarted"/>
            <seealso cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationStarting"/>
            <example>
            <para>
              The following code example shows how to use this event. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_009"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_009"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.ManipulationCompletedEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationCompleted"/> event.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.ManipulationCompletedEventArgs"/> class. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_009"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_009"/>
            </example>
        </member>
        <member name="T:C1.Win.TouchToolKit.TouchRoutedEventArgs">
            <summary>
              Provide base logic for all pointer and manipulation event args.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.TargetControl">
            <summary>
            Gets the target control which attached to the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/>.
            </summary>
            <value>
            The target control which attached to the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.Handled">
            <summary>
            Gets or sets a value that marks the routed event as handled. Setting to <see langword="true" /> prevents most
            handlers along the event route from handling the same event again.
            </summary>
            <value>
            <see langword="true"/> to mark the routed event handled; <see langword="false"/> to leave the routed event unhandled, 
            which permits the event to potentially route further. The default is <see langword="false"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.TouchRoutedEventArgs.OriginalSource">
            <summary>
            Gets a reference to the object that raised the event.
            </summary>
            <value>
            The object that raised the event.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationCompletedEventArgs.Cumulative">
            <summary>
            Gets the overall changes since the beginning of the manipulation.
            </summary>
            <value>
            The overall changes since the beginning of the manipulation.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationCompletedEventArgs.IsInertia">
            <summary>
            Gets whether the ManipulationCompleted event occurs during inertia.
            </summary>
            <value>
            <see langword="true"/> if the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationCompleted"/> event occurs
            during inertia; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationCompletedEventArgs.Position">
            <summary>
            Gets the x- and y- control coordinates of the touch input at completed position.
            </summary>
            <value>
            The x- and y- control coordinates of the touch input at completed position.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationCompletedEventArgs.PointerDeviceType">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> for the pointer device involved in the manipulation.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> values.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationCompletedEventArgs.Velocities">
            <summary>
            Gets the velocities that are used for the manipulation.
            </summary>
            <value>
            The velocities that are used for the manipulation.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ManipulationDeltaEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationDelta"/> event.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.ManipulationDeltaEventArgs"/> class. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_007"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_007"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.ManipulationDeltaEventArgs.Complete">
            <summary>
            Completes the manipulation without inertia.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationDeltaEventArgs.Cumulative">
            <summary>
            Gets the overall changes since the beginning of the manipulation.
            </summary>
            <value>
            The overall changes since the beginning of the manipulation.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationDeltaEventArgs.Delta">
            <summary>
            Gets the most recent changes of the current manipulation, as a <see cref="T:C1.Win.TouchToolKit.ManipulationDelta"/>.
            </summary>
            <value>
            The most recent changes of the current manipulation.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationDeltaEventArgs.IsInertia">
            <summary>
            Gets whether the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationDelta"/> event occurs during inertia.
            </summary>
            <value>
            <see langword="true"/> if the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationDelta"/> event occurs during inertia; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationDeltaEventArgs.Position">
            <summary>
            Gets the point from which the manipulation originated.
            </summary>
            <value>
            The point from which the manipulation originated.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationDeltaEventArgs.PointerDeviceType">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> for the pointer device involved in the manipulation.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> values.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationDeltaEventArgs.Velocities">
            <summary>
            Gets the rates of the most recent changes to the manipulation.
            </summary>
            <value>
            The rates of the most recent changes to the manipulation.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ManipulationInertiaStartingEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationInertiaStarting"/> event.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.ManipulationInertiaStartingEventArgs"/> class. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_008"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_008"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationInertiaStartingEventArgs.Cumulative">
            <summary>
            Gets the overall changes since the beginning of the manipulation.
            </summary>
            <value>
            The overall changes since the beginning of the manipulation.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationInertiaStartingEventArgs.Delta">
            <summary>
            Gets the most recent changes of the current manipulation, as a <see cref="T:C1.Win.TouchToolKit.ManipulationDelta"/>.
            </summary>
            <value>
            The most recent changes of the current manipulation.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationInertiaStartingEventArgs.PointerDeviceType">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> for the pointer device involved in the manipulation.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> values.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationInertiaStartingEventArgs.Velocities">
            <summary>
            Gets the rates of the most recent changes to the manipulation.
            </summary>
            <value>
            The rates of the most recent changes to the manipulation.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationInertiaStartingEventArgs.ExpansionBehavior">
            <summary>
            Get or sets the rate of slowdown of expansion inertia movement.
            </summary>
            <value>
            The rate of slowdown of expansion inertia movement.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationInertiaStartingEventArgs.RotationBehavior">
            <summary>
            Get or sets the rate of slowdown of rotation inertia movement.
            </summary>
            <value>
            The rate of slowdown of rotation inertia movement.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationInertiaStartingEventArgs.TranslationBehavior">
            <summary>
            Get or sets the rate of slowdown of translation inertia movement.
            </summary>
            <value>
            The rate of slowdown of translation inertia movement.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ManipulationStartedEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationStarted"/> event.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.ManipulationStartedEventArgs"/> class. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_006"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_006"/>
            </example>
        </member>
        <member name="M:C1.Win.TouchToolKit.ManipulationStartedEventArgs.Complete">
            <summary>
            Completes the manipulation without inertia.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationStartedEventArgs.Cumulative">
            <summary>
            Gets the overall changes since the beginning of the manipulation.
            </summary>
            <value>
            The overall changes since the beginning of the manipulation.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationStartedEventArgs.Position">
            <summary>
            Gets the point from which the manipulation originated.
            </summary>
            <value>
            The point from which the manipulation originated.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationStartedEventArgs.PointerDeviceType">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> for the pointer device involved in the manipulation.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> values.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationStartedEventArgs.PointerCount">
            <summary>
            Gets the count of touch points.
            </summary>
            <value>
            A <see cref="T:System.Int32"/> value that represents the count of touch points.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ManipulationStartingEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.ManipulationStarting"/> event.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.ManipulationStartingEventArgs"/> class. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_005"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_005"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationStartingEventArgs.Mode">
            <summary>
            Gets or sets which types of manipulations are possible.
            </summary>
            <value>
            One of the <see cref="T:C1.Win.TouchToolKit.ManipulationModes"/> values. The default is <see cref="F:C1.Win.TouchToolKit.ManipulationModes.All"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationStartingEventArgs.Pivot">
            <summary>
            Gets or sets an object that describes the pivot for a single-point manipulation.
            </summary>
            <value>
            An object that describes the pivot for a single-point manipulation.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationStartingEventArgs.Position">
            <summary>
            Gets the point from which the manipulation originated.
            </summary>
            <value>
            The point from which the manipulation originated.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationStartingEventArgs.PointerDeviceType">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> for the pointer device involved in the manipulation.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> values.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.InertiaExpansionBehavior">
            <summary>
            Controls the deceleration of a resizing manipulation during inertia.
            </summary> 
        </member>
        <member name="P:C1.Win.TouchToolKit.InertiaExpansionBehavior.DesiredDeceleration">
            <summary>
            Gets or sets the rate that resizing slows.
            </summary>
            <value>
            The rate that resizing slows.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.InertiaExpansionBehavior.DesiredExpansion">
            <summary>
            Gets or sets the amount the control resizes at the end of inertia.
            </summary>
            <value>
            The amount the control resizes at the end of inertia.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.InertiaRotationBehavior">
            <summary>
            Controls the deceleration of a rotation manipulation during inertia.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.InertiaRotationBehavior.DesiredDeceleration">
            <summary>
            Gets or sets the rate the rotation slows in degrees per squared millisecond.
            </summary>
            <value>
            The rate the rotation slows in degrees per squared millisecond.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.InertiaRotationBehavior.DesiredRotation">
            <summary>
            Gets or sets the rotation, in degrees, at the end of the inertia movement.
            </summary>
            <value>
            The rotation, in degrees, at the end of the inertia movement.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.InertiaTranslationBehavior">
            <summary>
            Controls deceleration on a translation manipulation during inertia.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.InertiaTranslationBehavior.DesiredDeceleration">
            <summary>
            Gets or sets the rate the linear movement slows in device-independent units (1/96th inch per unit) per squared millisecond.
            </summary>
            <value>
            The rate the linear movement slows in device-independent units (1/96th inch per unit) per squared millisecond. 
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.InertiaTranslationBehavior.DesiredDisplacement">
            <summary>
            Gets or sets the linear movement of the manipulation at the end of inertia.
            </summary>
            <value>
            The linear movement of the manipulation at the end of inertia.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ManipulationDelta">
            <summary>
            Contains the accumulated transformations for the current manipulation.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationDelta.Translation">
            <summary>
            The change in x-y screen coordinates, in DIPs.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationDelta.Scale">
            <summary>
            The change in distance between touch contacts, as a percentage. For example, 
            if the distance between two contacts changes from 100 DIPs to 200 DIPs during a manipulation, 
            the value of Scale would be 2.0.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationDelta.Rotation">
            <summary>
            The change in angle of rotation, in degrees.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationDelta.Expansion">
            <summary>
            The change in distance between touch contacts, as DIPs. For example, if the distance between two contacts 
            changes from 100 DIPs to 200 DIPs during a manipulation, the value of Expansion would be 100.0.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.ManipulationVelocities">
            <summary>
            Contains the velocities of the accumulated transformations for the current interaction.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationVelocities.Linear">
            <summary>
            Gets the straight line velocity in DIPs per millisecond.
            </summary>
            <value>
            The straight line velocity in DIPs per millisecond.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationVelocities.Angular">
            <summary>
            Gets the rotational velocity in degrees per millisecond.
            </summary>
            <value>
            The rotational velocity in degrees per millisecond.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationVelocities.Expansion">
            <summary>
            Gets the expansion, or scaling, velocity in DIPs per millisecond.
            </summary>
            <value>
            The expansion, or scaling, velocity in DIPs per millisecond.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.ManipulationModes">
            <summary>
            Specifies how a target control interprets manipulation events. 
            This enumeration is flagwise to facilitate setting multiple modes.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationModes.All">
            <summary>
            Enable all manipulation interaction modes.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationModes.None">
            <summary>
            Do not present graphic interaction with manipulation events.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationModes.TranslateX">
            <summary>
            Permit manipulation actions that translate the target on the X axis.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationModes.TranslateY">
            <summary>
            Permit manipulation actions that translate the target on the Y axis.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationModes.TranslateRailsX">
            <summary>
            Permit manipulation actions that translate the target on the X axis but using a rails mode.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationModes.TranslateRailsY">
            <summary>
            Permit manipulation actions that translate the target on the Y axis but using a rails mode.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationModes.Rotate">
            <summary>
            Permit manipulation actions that rotate the target.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationModes.Scale">
            <summary>
            Permit manipulation actions that scale the target.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationModes.TranslateInertia">
            <summary>
            Apply inertia to translate actions.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationModes.RotateInertia">
            <summary>
            Apply inertia to rotate actions.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.ManipulationModes.ScaleInertia">
            <summary>
            Apply inertia to scale actions.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.ManipulationPivot">
            <summary>
            Specifies how a rotation occurs with one point of user input.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.ManipulationPivot.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.ManipulationPivot"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TouchToolKit.ManipulationPivot.#ctor(System.Drawing.Point,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TouchToolKit.ManipulationPivot"/> class.
            </summary>
            <param name="center">The center.</param>
            <param name="radius">The radius.</param>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationPivot.Center">
            <summary>
            Gets or sets the center point for rotation manipulations.
            </summary>
            <value>
            The center point for rotation manipulations.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.ManipulationPivot.Radius">
            <summary>
            Gets or sets the effective radius of rotation for rotation manipulations.
            </summary>
            <value>
            A value in pixels.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.PointerEventArgs">
            <summary>
            Provides event data for pointer message events related to <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/>, such as <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/>.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.PointerEventArgs"/> class. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.PointerPressed"/> event.
            </para>
              <code lang="CS" source="C1TouchEventProviderPointerDemo.cs" region="ID_006"/>
              <code lang="VB" source="C1TouchEventProviderPointerDemo.vb" region="ID_006"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerEventArgs.ID">
            <summary>
            Gets the system-generated identifier for this pointer reference.
            </summary>
            <value>
            The system-generated identifier.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerEventArgs.DeviceType">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> for the pointer device.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> values.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerEventArgs.Position">
            <summary>
            Gets the x- and y- control coordinates of the touch input at completed position.
            </summary>
            <value>
            The x- and y- control coordinates of the touch input at completed position.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerEventArgs.IsInContact">
            <summary>
            Gets a value that determines whether the pointer device was in contact with a sensor or digitizer
            at the time that the event was reported.
            </summary>
            <value>
            <see langword="true"/> if the pointer device was in contact; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerEventArgs.IsInRange">
            <summary>
            Gets a value that determines whether the pointer device was in detection range of a sensor or digitizer
            at the time that the event was reported.
            </summary>
            <value>
            <see langword="true"/> if the pointer device was in detection range; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerEventArgs.Properties">
            <summary>
            Gets extended information about the input pointer.
            </summary>
            <value>
            The extended properties exposed by the input device.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.HoldingEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.Holding"/> event.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.HoldingEventArgs"/> class. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_004"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_004"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.HoldingEventArgs.PointerDeviceType">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> for the pointer device that initiated the associated input event.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> values.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.HoldingEventArgs.Position">
            <summary>
            Returns the x- and y- control coordinates of the pointer position.
            </summary>
            <value>
            The x- and y- control coordinates of the pointer position.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.HoldingEventArgs.HoldingState">
            <summary>
            Gets the underlying <see cref="T:C1.Win.TouchToolKit.HoldingState"/> for the interaction
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.HoldingState"/> values.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.HoldingState">
            <summary>
              Specifies the state of the <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.Holding"/> event.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.HoldingState.Started">
            <summary>
              A single contact has been detected and a time threshold is crossed without the contact being lifted, another contact detected, or another gesture started.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.HoldingState.Completed">
            <summary>
            The single contact is lifted.
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.HoldingState.Canceled">
            <summary>
            An additional contact is detected, a subsequent gesture (such as a slide) is detected.
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.PointerPointProperties">
            <summary>
              Provides extended properties for a <see cref="T:C1.Win.TouchToolKit.PointerEventArgs"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.ContactRect">
            <summary>
            Gets the bounding rectangle of the contact area (typically from touch input).
            </summary>
            <value>
            The bounding rectangle of the contact area, using client window coordinates in device-independent pixels (DIPs).
            </value>
            <remarks>
            <para>
            <see cref="P:C1.Win.TouchToolKit.PointerPointProperties.ContactRect"/> contains the bounding rectangle of the contact area as interpreted by the system. 
            Under some circumstances, such as input prediction, this data can be modified by the system to compensate 
            for hardware latency or message latency due to inherent delays in sensing and processing the pointer location
            on the digitizer.
            </para>
            <para>
            See <see cref="P:C1.Win.TouchToolKit.PointerPointProperties.ContactRectRaw"/> for more information on raw input data.
            </para>
            </remarks>
            <seealso cref="P:C1.Win.TouchToolKit.PointerPointProperties.ContactRectRaw"/>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.ContactRectRaw">
            <summary>
            Gets the bounding rectangle of the raw input (typically from touch input).
            </summary>
            <value>
            The bounding rectangle of the raw input, in device-independent pixels (DIPs)
            </value>
            <remarks>
            <para>
            <see cref="P:C1.Win.TouchToolKit.PointerPointProperties.ContactRectRaw"/> contains the bounding rectangle of the raw input as reported by the input device.
            Under some circumstances, such as input prediction, this data can be modified by the system to compensate for
            hardware latency or message latency due to inherent delays in sensing and processing the pointer location on 
            the digitizer.
            </para>
            <para>
            See <see cref="P:C1.Win.TouchToolKit.PointerPointProperties.ContactRect"/> for more information on handling modified input data.
            </para>
            </remarks>
            <seealso cref="P:C1.Win.TouchToolKit.PointerPointProperties.ContactRect"/>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.IsBarrelButtonPressed">
            <summary>
            Gets a value that indicates whether the barrel button of the pen/stylus device is pressed.
            </summary>
            <value>
            <see langword="true"/> if the barrel button is pressed; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.IsCanceled">
            <summary>
            Gets a value that indicates whether the input was canceled by the pointer device.
            </summary>
            <value>
            <see langword="true"/> if the input was canceled; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            <para>
            Pointer input can be canceled for various reasons, including:
            </para>
            <list type="bullet">
            <item>
            Palm rejection
            </item>
            <item>
            Input arbitration (such as pen/stylus proximity overriding touch input)
            </item>
            <item>
            Device removal
            </item>
            <item>
            Invalid state transition
            </item>
            <item>
            Screen rotation
            </item>
            <item>
            Desktop switching
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.IsEraser">
            <summary>
            Gets a value that indicates whether the input is from a digitizer eraser.
            </summary>
            <value>
            <see langword="true"/> if the input is from a digitizer eraser; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.IsInRange">
            <summary>
            Gets a value that indicates whether the physical entity (finger or pen) is in range of the digitizer.
            </summary>
            <value>
            <see langword="true"/> if in range; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.IsInverted">
            <summary>
            Gets a value that indicates whether the digitizer pen is inverted.
            </summary>
            <value>
            <see langword="true"/> if inverted; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.IsPrimary">
            <summary>
            Gets a value that indicates whether the input is from the primary pointer when multiple pointers are registered.
            </summary>
            <value>
            <see langword="true"/> if the input is from the pointer designated as primary; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            A primary pointer can perform actions that are not available to other pointers. 
            For example, the primary pointer can send a WM_POINTERACTIVATE message when it makes contact with a window.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.Orientation">
            <summary>
            Gets the counter-clockwise angle of rotation around the major axis of the pointer device 
            (the z-axis, perpendicular to the surface of the digitizer). A value of 0.0 degrees indicates 
            the device is oriented towards the top of the digitizer.
            </summary>
            <value>
            A value between 0.0 and 359.0 in degrees of rotation. The default value is 0.0.
            </value>
            <remarks>
            Orientation is also referred to as azimuth.
            </remarks>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.Pressure">
            <summary>
            Gets a value that indicates the force that the pointer device (typically a pen/stylus) exerts on the surface
            of the digitizer.
            </summary>
            <value>
            A value from 0 to 1.0. The default value is 0.5.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.TouchConfidence">
            <summary>
            Gets a value that indicates whether the pointer device rejected the touch contact.
            </summary>
            <value>
            <see langword="true"/> if the touch contact was accepted; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.Twist">
            <summary>
            Gets the clockwise rotation in degrees of a pen device around its own major axis 
            (such as when the user spins the pen in their fingers).
            </summary>
            <value>
            A value between 0.0 and 359.0 in degrees of rotation. The default value is 0.0.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.XTilt">
            <summary>
            Gets the plane angle between the Y-Z plane and the plane that contains the Y axis and the axis of the input device 
            (typically a pen/stylus).
            </summary>
            <value>
            The value is 0.0 when the finger or pen is perpendicular to the digitizer surface, 
            between 0.0 and 179.0 when tilted to the right of perpendicular, and between 0.0 and -179.0 
            when tilted to the left of perpendicular. The default value is 0.0.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.PointerPointProperties.YTilt">
            <summary>
            Gets the plane angle between the X-Z plane and the plane that contains the X axis and the axis of the input device 
            (typically a pen/stylus).
            </summary>
            <value>
            The value is 0.0 when the finger or pen is perpendicular to the digitizer surface, between 0.0 and -179.0 when tilted
            towards the user, and between 0.0 and 179.0 when tilted away from the user. The default value is 0.0.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.PointerDeviceType">
            <summary>
              Enumerates pointer device types.
            </summary>
            <remarks>
              <note>
              <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> do not support mouse pointer type, only pen or touch can raise pointer events.
              </note>
            </remarks>
        </member>
        <member name="F:C1.Win.TouchToolKit.PointerDeviceType.Touch">
            <summary>
            A touch-enabled device
            </summary>
        </member>
        <member name="F:C1.Win.TouchToolKit.PointerDeviceType.Pen">
            <summary>
            Pen
            </summary>
        </member>
        <member name="T:C1.Win.TouchToolKit.TappedEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.Tapped"/> event.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.TappedEventArgs"/> class. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_002"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_002"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.TappedEventArgs.Position">
            <summary>
            Returns the x- and y- control coordinates of the pointer position.
            </summary>
            <value>
            The x- and y- control coordinates of the pointer position.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.TappedEventArgs.PointerDeviceType">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> for the pointer device that initiated the associated input event.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> values.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.RightTappedEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.RightTapped"/> event.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.RightTappedEventArgs"/> class. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_010"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_010"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.RightTappedEventArgs.Position">
            <summary>
            Returns the x- and y- control coordinates of the pointer position.
            </summary>
            <value>
            The x- and y- control coordinates of the pointer position.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.RightTappedEventArgs.PointerDeviceType">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> for the pointer device that initiated the associated input event.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> values.
            </value>
        </member>
        <member name="T:C1.Win.TouchToolKit.DoubleTappedEventArgs">
            <summary>
            Provides data for <see cref="E:C1.Win.TouchToolKit.C1TouchEventProvider.DoubleTapped"/> event.
            </summary>
            <example>
            <para>
              The following code example shows how to use <see cref="T:C1.Win.TouchToolKit.DoubleTappedEventArgs"/> class. 
            </para>
            <para>
              This code example is part of a larger example provided for the <see cref="T:C1.Win.TouchToolKit.C1TouchEventProvider"/> class.
            </para>
              <code lang="CS" source="C1TouchEventProviderDemo.cs" region="ID_003"/>
              <code lang="VB" source="C1TouchEventProviderDemo.vb" region="ID_003"/>
            </example>
        </member>
        <member name="P:C1.Win.TouchToolKit.DoubleTappedEventArgs.Position">
            <summary>
            Returns the x- and y- control coordinates of the pointer position.
            </summary>
            <value>
            The x- and y- control coordinates of the pointer position.
            </value>
        </member>
        <member name="P:C1.Win.TouchToolKit.DoubleTappedEventArgs.PointerDeviceType">
            <summary>
            Gets the <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> for the pointer device that initiated the associated input event.
            </summary>
            <value>
            One of <see cref="T:C1.Win.TouchToolKit.PointerDeviceType"/> values.
            </value>
        </member>
    </members>
</doc>
